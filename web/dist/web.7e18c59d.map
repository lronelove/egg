{"version":3,"sources":["..\\node_modules\\ramda\\es\\internal\\_isPlaceholder.js","..\\node_modules\\ramda\\es\\internal\\_curry1.js","..\\node_modules\\ramda\\es\\always.js","..\\node_modules\\ramda\\es\\F.js","..\\node_modules\\ramda\\es\\T.js","..\\node_modules\\ramda\\es\\__.js","..\\node_modules\\ramda\\es\\internal\\_curry2.js","..\\node_modules\\ramda\\es\\add.js","..\\node_modules\\ramda\\es\\internal\\_concat.js","..\\node_modules\\ramda\\es\\internal\\_arity.js","..\\node_modules\\ramda\\es\\internal\\_curryN.js","..\\node_modules\\ramda\\es\\curryN.js","..\\node_modules\\ramda\\es\\addIndex.js","..\\node_modules\\ramda\\es\\internal\\_curry3.js","..\\node_modules\\ramda\\es\\adjust.js","..\\node_modules\\ramda\\es\\internal\\_isArray.js","..\\node_modules\\ramda\\es\\internal\\_isTransformer.js","..\\node_modules\\ramda\\es\\internal\\_dispatchable.js","..\\node_modules\\ramda\\es\\internal\\_reduced.js","..\\node_modules\\ramda\\es\\internal\\_xfBase.js","..\\node_modules\\ramda\\es\\internal\\_xall.js","..\\node_modules\\ramda\\es\\all.js","..\\node_modules\\ramda\\es\\max.js","..\\node_modules\\ramda\\es\\internal\\_map.js","..\\node_modules\\ramda\\es\\internal\\_isString.js","..\\node_modules\\ramda\\es\\internal\\_isArrayLike.js","..\\node_modules\\ramda\\es\\internal\\_xwrap.js","..\\node_modules\\ramda\\es\\bind.js","..\\node_modules\\ramda\\es\\internal\\_reduce.js","..\\node_modules\\ramda\\es\\internal\\_xmap.js","..\\node_modules\\ramda\\es\\internal\\_has.js","..\\node_modules\\ramda\\es\\internal\\_isArguments.js","..\\node_modules\\ramda\\es\\keys.js","..\\node_modules\\ramda\\es\\map.js","..\\node_modules\\ramda\\es\\path.js","..\\node_modules\\ramda\\es\\prop.js","..\\node_modules\\ramda\\es\\pluck.js","..\\node_modules\\ramda\\es\\reduce.js","..\\node_modules\\ramda\\es\\allPass.js","..\\node_modules\\ramda\\es\\and.js","..\\node_modules\\ramda\\es\\internal\\_xany.js","..\\node_modules\\ramda\\es\\any.js","..\\node_modules\\ramda\\es\\anyPass.js","..\\node_modules\\ramda\\es\\ap.js","..\\node_modules\\ramda\\es\\internal\\_aperture.js","..\\node_modules\\ramda\\es\\internal\\_xaperture.js","..\\node_modules\\ramda\\es\\aperture.js","..\\node_modules\\ramda\\es\\append.js","..\\node_modules\\ramda\\es\\apply.js","..\\node_modules\\ramda\\es\\values.js","..\\node_modules\\ramda\\es\\applySpec.js","..\\node_modules\\ramda\\es\\applyTo.js","..\\node_modules\\ramda\\es\\ascend.js","..\\node_modules\\ramda\\es\\assoc.js","..\\node_modules\\ramda\\es\\internal\\_isInteger.js","..\\node_modules\\ramda\\es\\isNil.js","..\\node_modules\\ramda\\es\\assocPath.js","..\\node_modules\\ramda\\es\\nAry.js","..\\node_modules\\ramda\\es\\binary.js","..\\node_modules\\ramda\\es\\internal\\_isFunction.js","..\\node_modules\\ramda\\es\\liftN.js","..\\node_modules\\ramda\\es\\lift.js","..\\node_modules\\ramda\\es\\both.js","..\\node_modules\\ramda\\es\\curry.js","..\\node_modules\\ramda\\es\\call.js","..\\node_modules\\ramda\\es\\internal\\_makeFlat.js","..\\node_modules\\ramda\\es\\internal\\_forceReduced.js","..\\node_modules\\ramda\\es\\internal\\_flatCat.js","..\\node_modules\\ramda\\es\\internal\\_xchain.js","..\\node_modules\\ramda\\es\\chain.js","..\\node_modules\\ramda\\es\\clamp.js","..\\node_modules\\ramda\\es\\internal\\_cloneRegExp.js","..\\node_modules\\ramda\\es\\type.js","..\\node_modules\\ramda\\es\\internal\\_clone.js","..\\node_modules\\ramda\\es\\clone.js","..\\node_modules\\ramda\\es\\comparator.js","..\\node_modules\\ramda\\es\\not.js","..\\node_modules\\ramda\\es\\complement.js","..\\node_modules\\ramda\\es\\internal\\_pipe.js","..\\node_modules\\ramda\\es\\internal\\_checkForMethod.js","..\\node_modules\\ramda\\es\\slice.js","..\\node_modules\\ramda\\es\\tail.js","..\\node_modules\\ramda\\es\\pipe.js","..\\node_modules\\ramda\\es\\reverse.js","..\\node_modules\\ramda\\es\\compose.js","..\\node_modules\\ramda\\es\\composeK.js","..\\node_modules\\ramda\\es\\internal\\_pipeP.js","..\\node_modules\\ramda\\es\\pipeP.js","..\\node_modules\\ramda\\es\\composeP.js","..\\node_modules\\ramda\\es\\internal\\_arrayFromIterator.js","..\\node_modules\\ramda\\es\\internal\\_containsWith.js","..\\node_modules\\ramda\\es\\internal\\_functionName.js","..\\node_modules\\ramda\\es\\identical.js","..\\node_modules\\ramda\\es\\internal\\_equals.js","..\\node_modules\\ramda\\es\\equals.js","..\\node_modules\\ramda\\es\\internal\\_indexOf.js","..\\node_modules\\ramda\\es\\internal\\_contains.js","..\\node_modules\\ramda\\es\\internal\\_quote.js","..\\node_modules\\ramda\\es\\internal\\_toISOString.js","..\\node_modules\\ramda\\es\\internal\\_complement.js","..\\node_modules\\ramda\\es\\internal\\_filter.js","..\\node_modules\\ramda\\es\\internal\\_isObject.js","..\\node_modules\\ramda\\es\\internal\\_xfilter.js","..\\node_modules\\ramda\\es\\filter.js","..\\node_modules\\ramda\\es\\reject.js","..\\node_modules\\ramda\\es\\internal\\_toString.js","..\\node_modules\\ramda\\es\\toString.js","..\\node_modules\\ramda\\es\\concat.js","..\\node_modules\\ramda\\es\\cond.js","..\\node_modules\\ramda\\es\\constructN.js","..\\node_modules\\ramda\\es\\construct.js","..\\node_modules\\ramda\\es\\contains.js","..\\node_modules\\ramda\\es\\converge.js","..\\node_modules\\ramda\\es\\internal\\_xreduceBy.js","..\\node_modules\\ramda\\es\\reduceBy.js","..\\node_modules\\ramda\\es\\countBy.js","..\\node_modules\\ramda\\es\\dec.js","..\\node_modules\\ramda\\es\\defaultTo.js","..\\node_modules\\ramda\\es\\descend.js","..\\node_modules\\ramda\\es\\difference.js","..\\node_modules\\ramda\\es\\differenceWith.js","..\\node_modules\\ramda\\es\\dissoc.js","..\\node_modules\\ramda\\es\\remove.js","..\\node_modules\\ramda\\es\\update.js","..\\node_modules\\ramda\\es\\dissocPath.js","..\\node_modules\\ramda\\es\\divide.js","..\\node_modules\\ramda\\es\\internal\\_xdrop.js","..\\node_modules\\ramda\\es\\drop.js","..\\node_modules\\ramda\\es\\internal\\_xtake.js","..\\node_modules\\ramda\\es\\take.js","..\\node_modules\\ramda\\es\\internal\\_dropLast.js","..\\node_modules\\ramda\\es\\internal\\_xdropLast.js","..\\node_modules\\ramda\\es\\dropLast.js","..\\node_modules\\ramda\\es\\internal\\_dropLastWhile.js","..\\node_modules\\ramda\\es\\internal\\_xdropLastWhile.js","..\\node_modules\\ramda\\es\\dropLastWhile.js","..\\node_modules\\ramda\\es\\internal\\_xdropRepeatsWith.js","..\\node_modules\\ramda\\es\\nth.js","..\\node_modules\\ramda\\es\\last.js","..\\node_modules\\ramda\\es\\dropRepeatsWith.js","..\\node_modules\\ramda\\es\\dropRepeats.js","..\\node_modules\\ramda\\es\\internal\\_xdropWhile.js","..\\node_modules\\ramda\\es\\dropWhile.js","..\\node_modules\\ramda\\es\\or.js","..\\node_modules\\ramda\\es\\either.js","..\\node_modules\\ramda\\es\\empty.js","..\\node_modules\\ramda\\es\\takeLast.js","..\\node_modules\\ramda\\es\\endsWith.js","..\\node_modules\\ramda\\es\\eqBy.js","..\\node_modules\\ramda\\es\\eqProps.js","..\\node_modules\\ramda\\es\\evolve.js","..\\node_modules\\ramda\\es\\internal\\_xfind.js","..\\node_modules\\ramda\\es\\find.js","..\\node_modules\\ramda\\es\\internal\\_xfindIndex.js","..\\node_modules\\ramda\\es\\findIndex.js","..\\node_modules\\ramda\\es\\internal\\_xfindLast.js","..\\node_modules\\ramda\\es\\findLast.js","..\\node_modules\\ramda\\es\\internal\\_xfindLastIndex.js","..\\node_modules\\ramda\\es\\findLastIndex.js","..\\node_modules\\ramda\\es\\flatten.js","..\\node_modules\\ramda\\es\\flip.js","..\\node_modules\\ramda\\es\\forEach.js","..\\node_modules\\ramda\\es\\forEachObjIndexed.js","..\\node_modules\\ramda\\es\\fromPairs.js","..\\node_modules\\ramda\\es\\groupBy.js","..\\node_modules\\ramda\\es\\groupWith.js","..\\node_modules\\ramda\\es\\gt.js","..\\node_modules\\ramda\\es\\gte.js","..\\node_modules\\ramda\\es\\has.js","..\\node_modules\\ramda\\es\\hasIn.js","..\\node_modules\\ramda\\es\\head.js","..\\node_modules\\ramda\\es\\internal\\_identity.js","..\\node_modules\\ramda\\es\\identity.js","..\\node_modules\\ramda\\es\\ifElse.js","..\\node_modules\\ramda\\es\\inc.js","..\\node_modules\\ramda\\es\\indexBy.js","..\\node_modules\\ramda\\es\\indexOf.js","..\\node_modules\\ramda\\es\\init.js","..\\node_modules\\ramda\\es\\innerJoin.js","..\\node_modules\\ramda\\es\\insert.js","..\\node_modules\\ramda\\es\\insertAll.js","..\\node_modules\\ramda\\es\\internal\\_Set.js","..\\node_modules\\ramda\\es\\uniqBy.js","..\\node_modules\\ramda\\es\\uniq.js","..\\node_modules\\ramda\\es\\intersection.js","..\\node_modules\\ramda\\es\\intersperse.js","..\\node_modules\\ramda\\es\\internal\\_objectAssign.js","..\\node_modules\\ramda\\es\\internal\\_assign.js","..\\node_modules\\ramda\\es\\objOf.js","..\\node_modules\\ramda\\es\\internal\\_stepCat.js","..\\node_modules\\ramda\\es\\into.js","..\\node_modules\\ramda\\es\\invert.js","..\\node_modules\\ramda\\es\\invertObj.js","..\\node_modules\\ramda\\es\\invoker.js","..\\node_modules\\ramda\\es\\is.js","..\\node_modules\\ramda\\es\\isEmpty.js","..\\node_modules\\ramda\\es\\join.js","..\\node_modules\\ramda\\es\\juxt.js","..\\node_modules\\ramda\\es\\keysIn.js","..\\node_modules\\ramda\\es\\lastIndexOf.js","..\\node_modules\\ramda\\es\\internal\\_isNumber.js","..\\node_modules\\ramda\\es\\length.js","..\\node_modules\\ramda\\es\\lens.js","..\\node_modules\\ramda\\es\\lensIndex.js","..\\node_modules\\ramda\\es\\lensPath.js","..\\node_modules\\ramda\\es\\lensProp.js","..\\node_modules\\ramda\\es\\lt.js","..\\node_modules\\ramda\\es\\lte.js","..\\node_modules\\ramda\\es\\mapAccum.js","..\\node_modules\\ramda\\es\\mapAccumRight.js","..\\node_modules\\ramda\\es\\mapObjIndexed.js","..\\node_modules\\ramda\\es\\match.js","..\\node_modules\\ramda\\es\\mathMod.js","..\\node_modules\\ramda\\es\\maxBy.js","..\\node_modules\\ramda\\es\\sum.js","..\\node_modules\\ramda\\es\\mean.js","..\\node_modules\\ramda\\es\\median.js","..\\node_modules\\ramda\\es\\memoizeWith.js","..\\node_modules\\ramda\\es\\memoize.js","..\\node_modules\\ramda\\es\\merge.js","..\\node_modules\\ramda\\es\\mergeAll.js","..\\node_modules\\ramda\\es\\mergeWithKey.js","..\\node_modules\\ramda\\es\\mergeDeepWithKey.js","..\\node_modules\\ramda\\es\\mergeDeepLeft.js","..\\node_modules\\ramda\\es\\mergeDeepRight.js","..\\node_modules\\ramda\\es\\mergeDeepWith.js","..\\node_modules\\ramda\\es\\mergeWith.js","..\\node_modules\\ramda\\es\\min.js","..\\node_modules\\ramda\\es\\minBy.js","..\\node_modules\\ramda\\es\\modulo.js","..\\node_modules\\ramda\\es\\multiply.js","..\\node_modules\\ramda\\es\\negate.js","..\\node_modules\\ramda\\es\\none.js","..\\node_modules\\ramda\\es\\nthArg.js","..\\node_modules\\ramda\\es\\o.js","..\\node_modules\\ramda\\es\\internal\\_of.js","..\\node_modules\\ramda\\es\\of.js","..\\node_modules\\ramda\\es\\omit.js","..\\node_modules\\ramda\\es\\once.js","..\\node_modules\\ramda\\es\\over.js","..\\node_modules\\ramda\\es\\pair.js","..\\node_modules\\ramda\\es\\internal\\_createPartialApplicator.js","..\\node_modules\\ramda\\es\\partial.js","..\\node_modules\\ramda\\es\\partialRight.js","..\\node_modules\\ramda\\es\\partition.js","..\\node_modules\\ramda\\es\\pathEq.js","..\\node_modules\\ramda\\es\\pathOr.js","..\\node_modules\\ramda\\es\\pathSatisfies.js","..\\node_modules\\ramda\\es\\pick.js","..\\node_modules\\ramda\\es\\pickAll.js","..\\node_modules\\ramda\\es\\pickBy.js","..\\node_modules\\ramda\\es\\pipeK.js","..\\node_modules\\ramda\\es\\prepend.js","..\\node_modules\\ramda\\es\\product.js","..\\node_modules\\ramda\\es\\useWith.js","..\\node_modules\\ramda\\es\\project.js","..\\node_modules\\ramda\\es\\propEq.js","..\\node_modules\\ramda\\es\\propIs.js","..\\node_modules\\ramda\\es\\propOr.js","..\\node_modules\\ramda\\es\\propSatisfies.js","..\\node_modules\\ramda\\es\\props.js","..\\node_modules\\ramda\\es\\range.js","..\\node_modules\\ramda\\es\\reduceRight.js","..\\node_modules\\ramda\\es\\reduceWhile.js","..\\node_modules\\ramda\\es\\reduced.js","..\\node_modules\\ramda\\es\\times.js","..\\node_modules\\ramda\\es\\repeat.js","..\\node_modules\\ramda\\es\\replace.js","..\\node_modules\\ramda\\es\\scan.js","..\\node_modules\\ramda\\es\\sequence.js","..\\node_modules\\ramda\\es\\set.js","..\\node_modules\\ramda\\es\\sort.js","..\\node_modules\\ramda\\es\\sortBy.js","..\\node_modules\\ramda\\es\\sortWith.js","..\\node_modules\\ramda\\es\\split.js","..\\node_modules\\ramda\\es\\splitAt.js","..\\node_modules\\ramda\\es\\splitEvery.js","..\\node_modules\\ramda\\es\\splitWhen.js","..\\node_modules\\ramda\\es\\startsWith.js","..\\node_modules\\ramda\\es\\subtract.js","..\\node_modules\\ramda\\es\\symmetricDifference.js","..\\node_modules\\ramda\\es\\symmetricDifferenceWith.js","..\\node_modules\\ramda\\es\\takeLastWhile.js","..\\node_modules\\ramda\\es\\internal\\_xtakeWhile.js","..\\node_modules\\ramda\\es\\takeWhile.js","..\\node_modules\\ramda\\es\\internal\\_xtap.js","..\\node_modules\\ramda\\es\\tap.js","..\\node_modules\\ramda\\es\\internal\\_isRegExp.js","..\\node_modules\\ramda\\es\\test.js","..\\node_modules\\ramda\\es\\toLower.js","..\\node_modules\\ramda\\es\\toPairs.js","..\\node_modules\\ramda\\es\\toPairsIn.js","..\\node_modules\\ramda\\es\\toUpper.js","..\\node_modules\\ramda\\es\\transduce.js","..\\node_modules\\ramda\\es\\transpose.js","..\\node_modules\\ramda\\es\\traverse.js","..\\node_modules\\ramda\\es\\trim.js","..\\node_modules\\ramda\\es\\tryCatch.js","..\\node_modules\\ramda\\es\\unapply.js","..\\node_modules\\ramda\\es\\unary.js","..\\node_modules\\ramda\\es\\uncurryN.js","..\\node_modules\\ramda\\es\\unfold.js","..\\node_modules\\ramda\\es\\union.js","..\\node_modules\\ramda\\es\\uniqWith.js","..\\node_modules\\ramda\\es\\unionWith.js","..\\node_modules\\ramda\\es\\unless.js","..\\node_modules\\ramda\\es\\unnest.js","..\\node_modules\\ramda\\es\\until.js","..\\node_modules\\ramda\\es\\valuesIn.js","..\\node_modules\\ramda\\es\\view.js","..\\node_modules\\ramda\\es\\when.js","..\\node_modules\\ramda\\es\\where.js","..\\node_modules\\ramda\\es\\whereEq.js","..\\node_modules\\ramda\\es\\without.js","..\\node_modules\\ramda\\es\\xprod.js","..\\node_modules\\ramda\\es\\zip.js","..\\node_modules\\ramda\\es\\zipObj.js","..\\node_modules\\ramda\\es\\zipWith.js","..\\node_modules\\ramda\\es\\index.js","index.js"],"names":["_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","always","val","F","T","_curry2","f2","b","_b","_a","add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","curryN","addIndex","origFn","list","args","Array","prototype","slice","call","_curry3","f3","c","_c","adjust","start","_idx","_list","isArray","_isArray","Object","toString","_isTransformer","obj","_dispatchable","methodNames","xf","pop","transducer","_reduced","x","init","XAll","f","all","_xfBase","input","_xall","max","_map","functor","len","_isString","_isArrayLike","isArrayLike","nodeType","hasOwnProperty","_xwrap","XWrap","acc","bind","thisObj","_reduce","_arrayReduce","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","reduce","TypeError","XMap","_xmap","_has","prop","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","_keys","keys","nIdx","ks","checkArgsLength","map","key","path","paths","p","pluck","allPass","preds","and","XAny","any","_xany","anyPass","ap","applyF","applyX","_aperture","limit","XAperture","pos","full","store","getCopy","_xaperture","aperture","append","el","values","props","vals","applySpec","spec","v","applyTo","ascend","aa","bb","assoc","isInteger","_isInteger","isNil","assocPath","nextObj","arr","concat","nAry","binary","_isFunction","liftN","arity","lifted","lift","both","g","_both","curry","_makeFlat","recursive","flatt","jlen","j","ilen","_forceReduced","preservingReduced","ret","_flatCat","_xcat","rxf","_xchain","chain","monad","clamp","min","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","type","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","clone","comparator","pred","not","complement","_pipe","_checkForMethod","methodname","fromIndex","toIndex","tail","Infinity","pipe","reverse","split","join","compose","composeK","last","_pipeP","ctx","then","pipeP","composeP","_arrayFromIterator","push","_containsWith","_functionName","match","String","identical","_equals","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","equals","constructor","name","message","size","entries","keysA","extendedStackA","extendedStackB","_indexOf","inf","indexOf","_contains","_quote","s","escaped","replace","pad","_toISOString","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","XFilter","_xfilter","filter","filterable","reject","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","cond","pairs","pair","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","construct","converge","after","fns","context","XReduceBy","valueFn","valueAcc","keyFn","inputs","_xreduceBy","reduceBy","elt","countBy","elem","dec","defaultTo","descend","difference","first","second","out","firstLen","differenceWith","dissoc","remove","count","splice","update","dissocPath","head","divide","XDrop","_xdrop","drop","Math","XTake","i","_xtake","take","dropLast","XDropLast","_xdropLast","_dropLast","dropLastWhile","XDropLastWhile","retained","retain","flush","_xdropLastWhile","_dropLastWhile","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropRepeatsWith","nth","offset","charAt","dropRepeatsWith","dropRepeats","XDropWhile","_xdropWhile","dropWhile","or","either","_either","empty","takeLast","endsWith","suffix","eqBy","eqProps","obj1","obj2","evolve","transformations","object","transformation","XFind","found","_xfind","find","XFindIndex","_xfindIndex","findIndex","XFindLast","_xfindLast","findLast","XFindLastIndex","lastIdx","_xfindLastIndex","findLastIndex","flatten","flip","forEach","forEachObjIndexed","keyList","fromPairs","groupBy","groupWith","res","nextidx","gt","gte","has","hasIn","_identity","identity","ifElse","condition","onTrue","onFalse","_ifElse","inc","indexBy","target","innerJoin","ys","insert","insertAll","elts","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","newSize","bIdx","uniqBy","appliedItem","uniq","intersection","list1","list2","lookupList","filteredList","intersperse","separator","_objectAssign","output","nextKey","assign","objOf","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","into","invert","invertObj","invoker","method","is","Ctor","isEmpty","juxt","keysIn","lastIndexOf","_isNumber","lens","getter","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","lt","lte","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","str","mathMod","m","maxBy","sum","mean","median","width","memoizeWith","mFn","cache","memoize","merge","l","r","mergeAll","_assign","mergeWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeWith","_","_l","_r","minBy","modulo","multiply","negate","none","nthArg","o","_of","of","omit","names","index","once","called","Identity","over","fst","snd","_createPartialApplicator","partial","partialRight","partition","pathEq","_path","pathOr","pathSatisfies","propPath","pick","pickAll","pickBy","pipeK","prepend","product","useWith","transformers","project","propEq","propIs","propOr","propSatisfies","ps","range","from","to","reduceRight","reduceWhile","_reduceWhile","reduced","times","RangeError","repeat","regex","replacement","scan","sequence","traversable","sortBy","sortWith","splitAt","array","splitEvery","splitWhen","prefix","startsWith","subtract","symmetricDifference","symmetricDifferenceWith","takeLastWhile","XTakeWhile","_xtakeWhile","takeWhile","XTap","_xtap","tap","_isRegExp","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","outerlist","innerlist","traverse","ws","zeroWidth","hasProtoTrim","trim","_trim","beginRx","endRx","tryCatch","_tryCatch","tryer","catcher","e","unapply","unary","uncurryN","depth","currentDepth","endIdx","unfold","seed","union","uniqWith","unionWith","unless","whenFalseFn","unnest","until","valuesIn","vs","Const","view","when","whenTrueFn","where","testObj","whereEq","without","xprod","zip","rv","zipObj","zipWith","default","R","require","resolvedUserList","data","cvs","userList","html","username","password","selector","document","querySelector","innerHTML","curryAppend","xml","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","handleData","open","send"],"mappings":"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","file":"web.7e18c59d.map","sourceRoot":"..","sourcesContent":["export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import always from './always';\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = /*#__PURE__*/always(false);\nexport default F;","import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry3 from './internal/_curry3';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _curry3 from './internal/_curry3';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity';\nimport _curry2 from './_curry2';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3';\nimport path from './path';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3';\nimport is from './is';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\nexport default propOr;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';","const R =  require('ramda')\r\n\r\n// 初步处理数据\r\nconst resolvedUserList = (data) => {\r\n  return data.data ? data.data: []\r\n}\r\n\r\n// 返回拼接字符串\r\nconst cvs = (userList) => {\r\n  let html = ''\r\n\r\n  userList.forEach((item) => {\r\n    html += `\r\n    <li>\r\n      <span>用户名：</span>\r\n      <span>${item.username}</span>\r\n    </li>\r\n    <li>\r\n      <span>密码：</span>\r\n      <span>${item.password}</span>\r\n    </li>\r\n    <hr>`  \r\n  })\r\n\r\n  return html\r\n}\r\n\r\n// 把字符串放在节点里面\r\nconst append = (selector, html) => {\r\n  document.querySelector(selector).innerHTML = html\r\n}\r\n\r\n// curry化append函数\r\nconst curryAppend = R.curry(append)\r\n\r\n// ajax请求\r\nlet xml = new XMLHttpRequest()\r\nxml.onreadystatechange = () => {\r\n  if (xml.readyState === 4 && xml.status === 200) {\r\n    let data = JSON.parse(xml.responseText)\r\n\r\n    // 组合函数并处理数据\r\n    const handleData = R.pipe(\r\n      resolvedUserList, \r\n      cvs, \r\n      curryAppend('#userList')\r\n    )\r\n\r\n    handleData(data)\r\n  }\r\n}\r\nxml.open('GET','http://localhost:7001/user')\r\nxml.send()"]}