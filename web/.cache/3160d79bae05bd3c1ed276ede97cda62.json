{"id":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropRepeatsWith.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_dispatchable","loc":{"line":2,"column":26},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropRepeatsWith.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_dispatchable.js"},{"name":"./internal/_xdropRepeatsWith","loc":{"line":3,"column":30},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropRepeatsWith.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_xdropRepeatsWith.js"},{"name":"./last","loc":{"line":4,"column":17},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropRepeatsWith.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\last.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _dispatchable2 = require('./internal/_dispatchable');\n\nvar _dispatchable3 = _interopRequireDefault(_dispatchable2);\n\nvar _xdropRepeatsWith2 = require('./internal/_xdropRepeatsWith');\n\nvar _xdropRepeatsWith3 = _interopRequireDefault(_xdropRepeatsWith2);\n\nvar _last = require('./last');\n\nvar _last2 = _interopRequireDefault(_last);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _dispatchable3.default)([], _xdropRepeatsWith3.default, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred((0, _last2.default)(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexports.default = dropRepeatsWith;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":6,"column":0}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":0}},{"name":"dropRepeatsWith","generated":{"line":46,"column":4},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":4}},{"generated":{"line":46,"column":22},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":22}},{"generated":{"line":46,"column":35},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":35}},{"generated":{"line":46,"column":57},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":44}},{"generated":{"line":46,"column":70},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":57}},{"generated":{"line":46,"column":98},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":71}},{"generated":{"line":46,"column":100},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":57}},{"name":"_xdropRepeatsWith","generated":{"line":46,"column":102},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":75}},{"generated":{"line":46,"column":128},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":57}},{"generated":{"line":46,"column":130},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":94}},{"name":"dropRepeatsWith","generated":{"line":46,"column":139},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":103}},{"generated":{"line":46,"column":154},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":94}},{"name":"pred","generated":{"line":46,"column":155},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":119}},{"generated":{"line":46,"column":159},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":94}},{"name":"list","generated":{"line":46,"column":161},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":125}},{"generated":{"line":46,"column":165},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":94}},{"generated":{"line":46,"column":167},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":131}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":28,"column":2}},{"name":"result","generated":{"line":47,"column":6},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":28,"column":6}},{"generated":{"line":47,"column":15},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":28,"column":15}},{"generated":{"line":47,"column":17},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":28,"column":2}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":29,"column":2}},{"name":"idx","generated":{"line":48,"column":6},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":29,"column":6}},{"generated":{"line":48,"column":12},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":29,"column":12}},{"generated":{"line":48,"column":13},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":29,"column":2}},{"generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":30,"column":2}},{"name":"len","generated":{"line":49,"column":6},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":30,"column":6}},{"name":"list","generated":{"line":49,"column":12},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":30,"column":12}},{"name":"length","generated":{"line":49,"column":17},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":30,"column":17}},{"generated":{"line":49,"column":23},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":30,"column":2}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":31,"column":2}},{"name":"len","generated":{"line":50,"column":6},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":31,"column":6}},{"generated":{"line":50,"column":14},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":31,"column":14}},{"generated":{"line":50,"column":15},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":31,"column":2}},{"generated":{"line":50,"column":17},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":31,"column":17}},{"name":"result","generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":32,"column":4}},{"generated":{"line":51,"column":11},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":32,"column":11}},{"generated":{"line":51,"column":12},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":32,"column":4}},{"name":"list","generated":{"line":51,"column":16},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":32,"column":16}},{"generated":{"line":51,"column":21},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":32,"column":21}},{"generated":{"line":51,"column":22},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":32,"column":16}},{"generated":{"line":51,"column":23},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":32,"column":4}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":33,"column":4}},{"name":"idx","generated":{"line":52,"column":11},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":33,"column":11}},{"name":"len","generated":{"line":52,"column":17},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":33,"column":17}},{"generated":{"line":52,"column":20},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":33,"column":4}},{"generated":{"line":52,"column":22},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":33,"column":22}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":6}},{"generated":{"line":53,"column":10},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":10}},{"name":"pred","generated":{"line":53,"column":11},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":11}},{"generated":{"line":53,"column":16},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":16}},{"name":"result","generated":{"line":53,"column":36},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":21}},{"generated":{"line":53,"column":42},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":16}},{"generated":{"line":53,"column":43},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":11}},{"name":"list","generated":{"line":53,"column":45},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":30}},{"name":"idx","generated":{"line":53,"column":50},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":35}},{"generated":{"line":53,"column":53},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":30}},{"generated":{"line":53,"column":54},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":11}},{"generated":{"line":53,"column":55},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":6}},{"generated":{"line":53,"column":57},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":34,"column":42}},{"name":"result","generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":8}},{"name":"result","generated":{"line":54,"column":15},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":15}},{"name":"length","generated":{"line":54,"column":22},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":22}},{"generated":{"line":54,"column":28},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":8}},{"name":"list","generated":{"line":54,"column":32},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":32}},{"name":"idx","generated":{"line":54,"column":37},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":37}},{"generated":{"line":54,"column":40},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":32}},{"generated":{"line":54,"column":41},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":35,"column":8}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":36,"column":7}},{"name":"idx","generated":{"line":56,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":37,"column":6}},{"generated":{"line":56,"column":13},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":37,"column":13}},{"generated":{"line":56,"column":14},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":37,"column":6}},{"generated":{"line":57,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":38,"column":5}},{"generated":{"line":58,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":39,"column":3}},{"generated":{"line":59,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":40,"column":2}},{"name":"result","generated":{"line":59,"column":9},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":40,"column":9}},{"generated":{"line":59,"column":15},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":40,"column":2}},{"generated":{"line":60,"column":0},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":41,"column":1}},{"generated":{"line":60,"column":1},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":57}},{"generated":{"line":60,"column":2},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":35}},{"generated":{"line":60,"column":3},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":27,"column":0}},{"name":"dropRepeatsWith","generated":{"line":61,"column":18},"source":"..\\node_modules\\ramda\\es\\dropRepeatsWith.js","original":{"line":42,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\dropRepeatsWith.js":"import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;"},"lineCount":null}},"hash":"6c7b954f8eb9771dfe5060d686dc3ca9","cacheData":{"env":{}}}