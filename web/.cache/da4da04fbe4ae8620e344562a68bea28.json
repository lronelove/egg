{"id":"..\\node_modules\\ramda\\es\\multiply.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\multiply.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/(0, _curry3.default)(function multiply(a, b) {\n  return a * b;\n});\nexports.default = multiply;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":0},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":0}},{"name":"multiply","generated":{"line":33,"column":4},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":4}},{"generated":{"line":33,"column":15},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":15}},{"generated":{"line":33,"column":28},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":28}},{"generated":{"line":33,"column":49},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":36}},{"name":"multiply","generated":{"line":33,"column":58},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":45}},{"generated":{"line":33,"column":66},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":36}},{"name":"a","generated":{"line":33,"column":67},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":54}},{"generated":{"line":33,"column":68},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":36}},{"name":"b","generated":{"line":33,"column":70},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":57}},{"generated":{"line":33,"column":71},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":36}},{"generated":{"line":33,"column":73},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":60}},{"generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":24,"column":2}},{"name":"a","generated":{"line":34,"column":9},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":24,"column":9}},{"name":"b","generated":{"line":34,"column":13},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":24,"column":13}},{"generated":{"line":34,"column":14},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":24,"column":2}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":25,"column":1}},{"generated":{"line":35,"column":1},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":28}},{"generated":{"line":35,"column":2},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":23,"column":0}},{"name":"multiply","generated":{"line":36,"column":18},"source":"..\\node_modules\\ramda\\es\\multiply.js","original":{"line":26,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\multiply.js":"import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;"},"lineCount":null}},"hash":"1e025404a3f4c8f3e785a9dbdfc6ad6a","cacheData":{"env":{}}}