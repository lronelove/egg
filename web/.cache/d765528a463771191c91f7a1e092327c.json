{"id":"..\\node_modules\\ramda\\es\\symmetricDifference.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\symmetricDifference.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./concat","loc":{"line":2,"column":19},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\symmetricDifference.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\concat.js"},{"name":"./difference","loc":{"line":3,"column":23},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\symmetricDifference.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\difference.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nvar _difference = require('./difference');\n\nvar _difference2 = _interopRequireDefault(_difference);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/(0, _curry3.default)(function symmetricDifference(list1, list2) {\n  return (0, _concat2.default)((0, _difference2.default)(list1, list2), (0, _difference2.default)(list2, list1));\n});\nexports.default = symmetricDifference;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":5,"column":0}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":0}},{"name":"symmetricDifference","generated":{"line":39,"column":4},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":4}},{"generated":{"line":39,"column":26},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":26}},{"generated":{"line":39,"column":39},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":39}},{"generated":{"line":39,"column":60},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":47}},{"name":"symmetricDifference","generated":{"line":39,"column":69},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":56}},{"generated":{"line":39,"column":88},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":47}},{"name":"list1","generated":{"line":39,"column":89},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":76}},{"generated":{"line":39,"column":94},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":47}},{"name":"list2","generated":{"line":39,"column":96},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":83}},{"generated":{"line":39,"column":101},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":47}},{"generated":{"line":39,"column":103},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":90}},{"generated":{"line":40,"column":0},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":2}},{"generated":{"line":40,"column":9},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":9}},{"generated":{"line":40,"column":31},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":16}},{"name":"list1","generated":{"line":40,"column":57},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":27}},{"generated":{"line":40,"column":62},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":16}},{"name":"list2","generated":{"line":40,"column":64},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":34}},{"generated":{"line":40,"column":69},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":16}},{"generated":{"line":40,"column":70},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":9}},{"generated":{"line":40,"column":72},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":42}},{"name":"list2","generated":{"line":40,"column":98},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":53}},{"generated":{"line":40,"column":103},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":42}},{"name":"list1","generated":{"line":40,"column":105},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":60}},{"generated":{"line":40,"column":110},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":42}},{"generated":{"line":40,"column":111},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":9}},{"generated":{"line":40,"column":112},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":24,"column":2}},{"generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":25,"column":1}},{"generated":{"line":41,"column":1},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":39}},{"generated":{"line":41,"column":2},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":23,"column":0}},{"name":"symmetricDifference","generated":{"line":42,"column":18},"source":"..\\node_modules\\ramda\\es\\symmetricDifference.js","original":{"line":26,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\symmetricDifference.js":"import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;"},"lineCount":null}},"hash":"1a43545757b150e57f130b7065dfe24a","cacheData":{"env":{}}}