{"id":"..\\node_modules\\ramda\\es\\dropLastWhile.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropLastWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_dispatchable","loc":{"line":2,"column":26},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropLastWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_dispatchable.js"},{"name":"./internal/_dropLastWhile","loc":{"line":3,"column":27},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropLastWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_dropLastWhile.js"},{"name":"./internal/_xdropLastWhile","loc":{"line":4,"column":28},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropLastWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_xdropLastWhile.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _dispatchable2 = require('./internal/_dispatchable');\n\nvar _dispatchable3 = _interopRequireDefault(_dispatchable2);\n\nvar _dropLastWhile2 = require('./internal/_dropLastWhile');\n\nvar _dropLastWhile3 = _interopRequireDefault(_dropLastWhile2);\n\nvar _xdropLastWhile2 = require('./internal/_xdropLastWhile');\n\nvar _xdropLastWhile3 = _interopRequireDefault(_xdropLastWhile2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _dispatchable3.default)([], _xdropLastWhile3.default, _dropLastWhile3.default));\nexports.default = dropLastWhile;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":6,"column":0}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":0}},{"name":"dropLastWhile","generated":{"line":50,"column":4},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":4}},{"generated":{"line":50,"column":20},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":20}},{"generated":{"line":50,"column":33},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":33}},{"generated":{"line":50,"column":55},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":42}},{"generated":{"line":50,"column":68},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":55}},{"generated":{"line":50,"column":96},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":69}},{"generated":{"line":50,"column":98},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":55}},{"name":"_xdropLastWhile","generated":{"line":50,"column":100},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":73}},{"generated":{"line":50,"column":124},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":55}},{"name":"_dropLastWhile","generated":{"line":50,"column":126},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":90}},{"generated":{"line":50,"column":149},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":55}},{"generated":{"line":50,"column":150},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":33}},{"generated":{"line":50,"column":151},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":31,"column":0}},{"name":"dropLastWhile","generated":{"line":51,"column":18},"source":"..\\node_modules\\ramda\\es\\dropLastWhile.js","original":{"line":32,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\dropLastWhile.js":"import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;"},"lineCount":null}},"hash":"6fdc4b7abbbcf8c2ac02b4c003ea76e9","cacheData":{"env":{}}}