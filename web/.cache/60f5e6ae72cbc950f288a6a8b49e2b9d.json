{"id":"..\\node_modules\\ramda\\es\\match.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\match.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry2.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/(0, _curry3.default)(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexports.default = match;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":3,"column":0}},{"generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":0}},{"name":"match","generated":{"line":34,"column":4},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":4}},{"generated":{"line":34,"column":12},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":12}},{"generated":{"line":34,"column":25},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":25}},{"generated":{"line":34,"column":46},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":33}},{"name":"match","generated":{"line":34,"column":55},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":42}},{"generated":{"line":34,"column":60},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":33}},{"name":"rx","generated":{"line":34,"column":61},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":48}},{"generated":{"line":34,"column":63},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":33}},{"name":"str","generated":{"line":34,"column":65},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":52}},{"generated":{"line":34,"column":68},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":33}},{"generated":{"line":34,"column":70},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":57}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":2}},{"name":"str","generated":{"line":35,"column":9},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":9}},{"name":"match","generated":{"line":35,"column":13},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":13}},{"generated":{"line":35,"column":18},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":9}},{"name":"rx","generated":{"line":35,"column":19},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":19}},{"generated":{"line":35,"column":21},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":26},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":26}},{"generated":{"line":35,"column":28},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":25,"column":2}},{"generated":{"line":36,"column":0},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":26,"column":1}},{"generated":{"line":36,"column":1},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":25}},{"generated":{"line":36,"column":2},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":24,"column":0}},{"name":"match","generated":{"line":37,"column":18},"source":"..\\node_modules\\ramda\\es\\match.js","original":{"line":27,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\match.js":"import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;"},"lineCount":null}},"hash":"2d50f8afb9f34c0e01c12318c53d2213","cacheData":{"env":{}}}