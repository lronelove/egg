{"id":"..\\node_modules\\ramda\\es\\invoker.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\invoker.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_isFunction","loc":{"line":2,"column":24},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\invoker.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_isFunction.js"},{"name":"./curryN","loc":{"line":3,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\invoker.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\curryN.js"},{"name":"./toString","loc":{"line":4,"column":21},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\invoker.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\toString.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _isFunction2 = require('./internal/_isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _curryN = require('./curryN');\n\nvar _curryN2 = _interopRequireDefault(_curryN);\n\nvar _toString = require('./toString');\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/(0, _curry3.default)(function invoker(arity, method) {\n  return (0, _curryN2.default)(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && (0, _isFunction3.default)(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError((0, _toString2.default)(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexports.default = invoker;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":6,"column":0}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":0}},{"name":"invoker","generated":{"line":52,"column":4},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":4}},{"generated":{"line":52,"column":14},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":14}},{"generated":{"line":52,"column":27},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":27}},{"generated":{"line":52,"column":48},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":35}},{"name":"invoker","generated":{"line":52,"column":57},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":44}},{"generated":{"line":52,"column":64},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":35}},{"name":"arity","generated":{"line":52,"column":65},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":52}},{"generated":{"line":52,"column":70},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":35}},{"name":"method","generated":{"line":52,"column":72},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":59}},{"generated":{"line":52,"column":78},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":35}},{"generated":{"line":52,"column":80},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":67}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":2}},{"generated":{"line":53,"column":9},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":9}},{"name":"arity","generated":{"line":53,"column":31},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":16}},{"generated":{"line":53,"column":39},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":24}},{"generated":{"line":53,"column":40},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":9}},{"generated":{"line":53,"column":42},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":27}},{"generated":{"line":53,"column":54},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":39}},{"generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":35,"column":4}},{"name":"target","generated":{"line":54,"column":8},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":35,"column":8}},{"name":"arguments","generated":{"line":54,"column":17},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":35,"column":17}},{"name":"arity","generated":{"line":54,"column":27},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":35,"column":27}},{"generated":{"line":54,"column":32},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":35,"column":17}},{"generated":{"line":54,"column":33},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":35,"column":4}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":4}},{"name":"target","generated":{"line":55,"column":8},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":8}},{"generated":{"line":55,"column":18},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":18}},{"generated":{"line":55,"column":22},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":8}},{"generated":{"line":55,"column":26},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":26}},{"name":"target","generated":{"line":55,"column":52},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":38}},{"name":"method","generated":{"line":55,"column":59},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":45}},{"generated":{"line":55,"column":65},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":38}},{"generated":{"line":55,"column":66},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":26}},{"generated":{"line":55,"column":67},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":4}},{"generated":{"line":55,"column":69},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":36,"column":55}},{"generated":{"line":56,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":6}},{"name":"target","generated":{"line":56,"column":13},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":13}},{"name":"method","generated":{"line":56,"column":20},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":20}},{"generated":{"line":56,"column":26},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":13}},{"name":"apply","generated":{"line":56,"column":28},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":28}},{"generated":{"line":56,"column":33},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":13}},{"name":"target","generated":{"line":56,"column":34},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":34}},{"generated":{"line":56,"column":40},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":13}},{"name":"Array","generated":{"line":56,"column":42},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":42}},{"name":"prototype","generated":{"line":56,"column":48},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":48}},{"generated":{"line":56,"column":57},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":42}},{"name":"slice","generated":{"line":56,"column":58},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":58}},{"generated":{"line":56,"column":63},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":42}},{"name":"call","generated":{"line":56,"column":64},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":64}},{"generated":{"line":56,"column":68},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":42}},{"name":"arguments","generated":{"line":56,"column":69},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":69}},{"generated":{"line":56,"column":78},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":42}},{"generated":{"line":56,"column":80},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":80}},{"generated":{"line":56,"column":81},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":42}},{"name":"arity","generated":{"line":56,"column":83},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":83}},{"generated":{"line":56,"column":88},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":42}},{"generated":{"line":56,"column":89},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":13}},{"generated":{"line":56,"column":90},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":37,"column":6}},{"generated":{"line":57,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":38,"column":5}},{"generated":{"line":58,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":4}},{"generated":{"line":58,"column":10},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":10}},{"name":"TypeError","generated":{"line":58,"column":14},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":14}},{"generated":{"line":58,"column":23},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":10}},{"generated":{"line":58,"column":24},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":24}},{"name":"target","generated":{"line":58,"column":48},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":33}},{"generated":{"line":58,"column":54},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":24}},{"generated":{"line":58,"column":58},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":43}},{"generated":{"line":58,"column":91},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":24}},{"name":"method","generated":{"line":58,"column":94},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":79}},{"generated":{"line":58,"column":100},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":24}},{"generated":{"line":58,"column":103},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":88}},{"generated":{"line":58,"column":106},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":10}},{"generated":{"line":58,"column":107},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":39,"column":4}},{"generated":{"line":59,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":40,"column":3}},{"generated":{"line":59,"column":3},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":9}},{"generated":{"line":59,"column":4},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":34,"column":2}},{"generated":{"line":60,"column":0},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":41,"column":1}},{"generated":{"line":60,"column":1},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":27}},{"generated":{"line":60,"column":2},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":33,"column":0}},{"name":"invoker","generated":{"line":61,"column":18},"source":"..\\node_modules\\ramda\\es\\invoker.js","original":{"line":42,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\invoker.js":"import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;"},"lineCount":null}},"hash":"1d2543498c9f2c50cc17f9b9324c9fd6","cacheData":{"env":{}}}