{"id":"..\\node_modules\\ramda\\es\\applySpec.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry1","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./apply","loc":{"line":2,"column":18},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\apply.js"},{"name":"./curryN","loc":{"line":3,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\curryN.js"},{"name":"./map","loc":{"line":4,"column":16},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\map.js"},{"name":"./max","loc":{"line":5,"column":16},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\max.js"},{"name":"./pluck","loc":{"line":6,"column":18},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\pluck.js"},{"name":"./reduce","loc":{"line":7,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\reduce.js"},{"name":"./values","loc":{"line":8,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\applySpec.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\values.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry1');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _apply = require('./apply');\n\nvar _apply2 = _interopRequireDefault(_apply);\n\nvar _curryN = require('./curryN');\n\nvar _curryN2 = _interopRequireDefault(_curryN);\n\nvar _map = require('./map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _max = require('./max');\n\nvar _max2 = _interopRequireDefault(_max);\n\nvar _pluck = require('./pluck');\n\nvar _pluck2 = _interopRequireDefault(_pluck);\n\nvar _reduce = require('./reduce');\n\nvar _reduce2 = _interopRequireDefault(_reduce);\n\nvar _values = require('./values');\n\nvar _values2 = _interopRequireDefault(_values);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/(0, _curry2.default)(function applySpec(spec) {\n  spec = (0, _map2.default)(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return (0, _curryN2.default)((0, _reduce2.default)(_max2.default, 0, (0, _pluck2.default)('length', (0, _values2.default)(spec))), function () {\n    var args = arguments;\n    return (0, _map2.default)(function (f) {\n      return (0, _apply2.default)(f, args);\n    }, spec);\n  });\n});\nexports.default = applySpec;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":5,"column":0}},{"generated":{"line":27,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":6,"column":0}},{"generated":{"line":31,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":7,"column":0}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":8,"column":0}},{"generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":10,"column":0}},{"generated":{"line":66,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":0}},{"name":"applySpec","generated":{"line":66,"column":4},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":4}},{"generated":{"line":66,"column":16},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":16}},{"generated":{"line":66,"column":29},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":29}},{"generated":{"line":66,"column":50},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":37}},{"name":"applySpec","generated":{"line":66,"column":59},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":46}},{"generated":{"line":66,"column":68},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":37}},{"name":"spec","generated":{"line":66,"column":69},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":56}},{"generated":{"line":66,"column":73},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":37}},{"generated":{"line":66,"column":75},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":62}},{"name":"spec","generated":{"line":67,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":2}},{"generated":{"line":67,"column":9},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":9}},{"generated":{"line":67,"column":28},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":13}},{"name":"v","generated":{"line":67,"column":38},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":23}},{"generated":{"line":67,"column":39},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":13}},{"generated":{"line":67,"column":41},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":26}},{"generated":{"line":68,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":4}},{"generated":{"line":68,"column":11},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":11}},{"name":"v","generated":{"line":68,"column":18},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":18}},{"generated":{"line":68,"column":19},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":11}},{"generated":{"line":68,"column":23},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":23}},{"generated":{"line":68,"column":33},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":11}},{"name":"v","generated":{"line":68,"column":36},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":36}},{"generated":{"line":68,"column":37},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":11}},{"name":"applySpec","generated":{"line":68,"column":40},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":40}},{"name":"v","generated":{"line":68,"column":50},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":50}},{"generated":{"line":68,"column":51},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":40}},{"generated":{"line":68,"column":52},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":37,"column":4}},{"generated":{"line":69,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":38,"column":3}},{"generated":{"line":69,"column":3},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":9}},{"name":"spec","generated":{"line":69,"column":5},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":38,"column":5}},{"generated":{"line":69,"column":9},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":9}},{"generated":{"line":69,"column":10},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":36,"column":2}},{"generated":{"line":70,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":2}},{"generated":{"line":70,"column":9},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":9}},{"generated":{"line":70,"column":31},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":16}},{"name":"max","generated":{"line":70,"column":53},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":23}},{"generated":{"line":70,"column":66},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":16}},{"generated":{"line":70,"column":68},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":28}},{"generated":{"line":70,"column":69},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":16}},{"generated":{"line":70,"column":71},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":31}},{"generated":{"line":70,"column":92},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":37}},{"generated":{"line":70,"column":100},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":31}},{"generated":{"line":70,"column":102},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":47}},{"name":"spec","generated":{"line":70,"column":124},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":54}},{"generated":{"line":70,"column":128},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":47}},{"generated":{"line":70,"column":129},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":31}},{"generated":{"line":70,"column":130},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":16}},{"generated":{"line":70,"column":131},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":9}},{"generated":{"line":70,"column":133},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":63}},{"generated":{"line":70,"column":145},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":75}},{"generated":{"line":71,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":40,"column":4}},{"name":"args","generated":{"line":71,"column":8},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":40,"column":8}},{"name":"arguments","generated":{"line":71,"column":15},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":40,"column":15}},{"generated":{"line":71,"column":24},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":40,"column":4}},{"generated":{"line":72,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":4}},{"generated":{"line":72,"column":11},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":11}},{"generated":{"line":72,"column":30},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":15}},{"name":"f","generated":{"line":72,"column":40},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":25}},{"generated":{"line":72,"column":41},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":15}},{"generated":{"line":72,"column":43},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":28}},{"generated":{"line":73,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":42,"column":6}},{"generated":{"line":73,"column":13},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":42,"column":13}},{"name":"f","generated":{"line":73,"column":34},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":42,"column":19}},{"generated":{"line":73,"column":35},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":42,"column":13}},{"name":"args","generated":{"line":73,"column":37},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":42,"column":22}},{"generated":{"line":73,"column":41},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":42,"column":13}},{"generated":{"line":73,"column":42},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":42,"column":6}},{"generated":{"line":74,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":43,"column":5}},{"generated":{"line":74,"column":5},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":11}},{"name":"spec","generated":{"line":74,"column":7},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":43,"column":7}},{"generated":{"line":74,"column":11},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":11}},{"generated":{"line":74,"column":12},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":41,"column":4}},{"generated":{"line":75,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":44,"column":3}},{"generated":{"line":75,"column":3},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":9}},{"generated":{"line":75,"column":4},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":39,"column":2}},{"generated":{"line":76,"column":0},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":45,"column":1}},{"generated":{"line":76,"column":1},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":29}},{"generated":{"line":76,"column":2},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":35,"column":0}},{"name":"applySpec","generated":{"line":77,"column":18},"source":"..\\node_modules\\ramda\\es\\applySpec.js","original":{"line":46,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\applySpec.js":"import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;"},"lineCount":null}},"hash":"f8b043636337b1e3ccfd19e497e44b26","cacheData":{"env":{}}}