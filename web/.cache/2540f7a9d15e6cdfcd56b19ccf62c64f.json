{"id":"..\\node_modules\\ramda\\es\\flip.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry1","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\flip.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./curryN","loc":{"line":2,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\flip.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\curryN.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry1');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _curryN = require('./curryN');\n\nvar _curryN2 = _interopRequireDefault(_curryN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/(0, _curry2.default)(function flip(fn) {\n  return (0, _curryN2.default)(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexports.default = flip;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":4,"column":0}},{"generated":{"line":37,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":0}},{"name":"flip","generated":{"line":37,"column":4},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":4}},{"generated":{"line":37,"column":11},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":11}},{"generated":{"line":37,"column":24},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":24}},{"generated":{"line":37,"column":45},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":32}},{"name":"flip","generated":{"line":37,"column":54},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":41}},{"generated":{"line":37,"column":58},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":32}},{"name":"fn","generated":{"line":37,"column":59},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":46}},{"generated":{"line":37,"column":61},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":32}},{"generated":{"line":37,"column":63},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":50}},{"generated":{"line":38,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":2}},{"generated":{"line":38,"column":9},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":9}},{"name":"fn","generated":{"line":38,"column":31},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":16}},{"name":"length","generated":{"line":38,"column":34},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":19}},{"generated":{"line":38,"column":40},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":9}},{"generated":{"line":38,"column":42},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":27}},{"name":"a","generated":{"line":38,"column":52},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":37}},{"generated":{"line":38,"column":53},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":27}},{"name":"b","generated":{"line":38,"column":55},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":40}},{"generated":{"line":38,"column":56},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":27}},{"generated":{"line":38,"column":58},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":43}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":4}},{"name":"args","generated":{"line":39,"column":8},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":8}},{"name":"Array","generated":{"line":39,"column":15},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":15}},{"name":"prototype","generated":{"line":39,"column":21},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":21}},{"generated":{"line":39,"column":30},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":15}},{"name":"slice","generated":{"line":39,"column":31},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":31}},{"generated":{"line":39,"column":36},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":15}},{"name":"call","generated":{"line":39,"column":37},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":37}},{"generated":{"line":39,"column":41},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":15}},{"name":"arguments","generated":{"line":39,"column":42},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":42}},{"generated":{"line":39,"column":51},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":15}},{"generated":{"line":39,"column":53},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":53}},{"generated":{"line":39,"column":54},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":15}},{"generated":{"line":39,"column":55},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":26,"column":4}},{"name":"args","generated":{"line":40,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":27,"column":4}},{"generated":{"line":40,"column":9},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":27,"column":9}},{"generated":{"line":40,"column":10},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":27,"column":4}},{"name":"b","generated":{"line":40,"column":14},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":27,"column":14}},{"generated":{"line":40,"column":15},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":27,"column":4}},{"name":"args","generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":28,"column":4}},{"generated":{"line":41,"column":9},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":28,"column":9}},{"generated":{"line":41,"column":10},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":28,"column":4}},{"name":"a","generated":{"line":41,"column":14},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":28,"column":14}},{"generated":{"line":41,"column":15},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":28,"column":4}},{"generated":{"line":42,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":4}},{"name":"fn","generated":{"line":42,"column":11},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":11}},{"name":"apply","generated":{"line":42,"column":14},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":14}},{"generated":{"line":42,"column":19},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":11}},{"generated":{"line":42,"column":20},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":20}},{"generated":{"line":42,"column":24},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":11}},{"name":"args","generated":{"line":42,"column":26},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":26}},{"generated":{"line":42,"column":30},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":11}},{"generated":{"line":42,"column":31},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":29,"column":4}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":30,"column":3}},{"generated":{"line":43,"column":3},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":9}},{"generated":{"line":43,"column":4},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":25,"column":2}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":31,"column":1}},{"generated":{"line":44,"column":1},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":24}},{"generated":{"line":44,"column":2},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":24,"column":0}},{"name":"flip","generated":{"line":45,"column":18},"source":"..\\node_modules\\ramda\\es\\flip.js","original":{"line":32,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\flip.js":"import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;"},"lineCount":null}},"hash":"924c77a1bfe818b757bd59c1111bb970","cacheData":{"env":{}}}