{"id":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\mergeDeepWith.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry3.js"},{"name":"./mergeDeepWithKey","loc":{"line":2,"column":29},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\mergeDeepWith.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\mergeDeepWithKey.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _mergeDeepWithKey = require('./mergeDeepWithKey');\n\nvar _mergeDeepWithKey2 = _interopRequireDefault(_mergeDeepWithKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/(0, _curry2.default)(function mergeDeepWith(fn, lObj, rObj) {\n  return (0, _mergeDeepWithKey2.default)(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexports.default = mergeDeepWith;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":4,"column":0}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":0}},{"name":"mergeDeepWith","generated":{"line":44,"column":4},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":4}},{"generated":{"line":44,"column":20},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":20}},{"generated":{"line":44,"column":33},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":33}},{"generated":{"line":44,"column":54},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":41}},{"name":"mergeDeepWith","generated":{"line":44,"column":63},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":50}},{"generated":{"line":44,"column":76},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":41}},{"name":"fn","generated":{"line":44,"column":77},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":64}},{"generated":{"line":44,"column":79},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":41}},{"name":"lObj","generated":{"line":44,"column":81},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":68}},{"generated":{"line":44,"column":85},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":41}},{"name":"rObj","generated":{"line":44,"column":87},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":74}},{"generated":{"line":44,"column":91},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":41}},{"generated":{"line":44,"column":93},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":80}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":2}},{"generated":{"line":45,"column":9},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":9}},{"generated":{"line":45,"column":41},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":26}},{"name":"k","generated":{"line":45,"column":51},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":36}},{"generated":{"line":45,"column":52},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":26}},{"name":"lVal","generated":{"line":45,"column":54},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":39}},{"generated":{"line":45,"column":58},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":26}},{"name":"rVal","generated":{"line":45,"column":60},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":45}},{"generated":{"line":45,"column":64},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":26}},{"generated":{"line":45,"column":66},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":51}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":33,"column":4}},{"name":"fn","generated":{"line":46,"column":11},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":33,"column":11}},{"name":"lVal","generated":{"line":46,"column":14},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":33,"column":14}},{"generated":{"line":46,"column":18},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":33,"column":11}},{"name":"rVal","generated":{"line":46,"column":20},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":33,"column":20}},{"generated":{"line":46,"column":24},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":33,"column":11}},{"generated":{"line":46,"column":25},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":33,"column":4}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":34,"column":3}},{"generated":{"line":47,"column":3},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":9}},{"name":"lObj","generated":{"line":47,"column":5},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":34,"column":5}},{"generated":{"line":47,"column":9},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":9}},{"name":"rObj","generated":{"line":47,"column":11},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":34,"column":11}},{"generated":{"line":47,"column":15},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":9}},{"generated":{"line":47,"column":16},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":32,"column":2}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":35,"column":1}},{"generated":{"line":48,"column":1},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":33}},{"generated":{"line":48,"column":2},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":31,"column":0}},{"name":"mergeDeepWith","generated":{"line":49,"column":18},"source":"..\\node_modules\\ramda\\es\\mergeDeepWith.js","original":{"line":36,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\mergeDeepWith.js":"import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;"},"lineCount":null}},"hash":"429c771862115d80faf137a24a012f56","cacheData":{"env":{}}}