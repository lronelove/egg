{"id":"..\\node_modules\\ramda\\es\\toPairsIn.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_curry1","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\toPairsIn.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry1.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry1');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/(0, _curry2.default)(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexports.default = toPairsIn;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":3,"column":0}},{"generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":0}},{"name":"toPairsIn","generated":{"line":34,"column":4},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":4}},{"generated":{"line":34,"column":16},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":16}},{"generated":{"line":34,"column":29},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":29}},{"generated":{"line":34,"column":50},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":37}},{"name":"toPairsIn","generated":{"line":34,"column":59},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":46}},{"generated":{"line":34,"column":68},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":37}},{"name":"obj","generated":{"line":34,"column":69},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":56}},{"generated":{"line":34,"column":72},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":37}},{"generated":{"line":34,"column":74},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":61}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":25,"column":2}},{"name":"pairs","generated":{"line":35,"column":6},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":25,"column":6}},{"generated":{"line":35,"column":14},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":25,"column":14}},{"generated":{"line":35,"column":16},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":25,"column":2}},{"generated":{"line":36,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":26,"column":2}},{"generated":{"line":36,"column":7},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":26,"column":7}},{"name":"prop","generated":{"line":36,"column":11},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":26,"column":11}},{"generated":{"line":36,"column":15},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":26,"column":2}},{"name":"obj","generated":{"line":36,"column":19},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":26,"column":19}},{"generated":{"line":36,"column":22},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":26,"column":2}},{"generated":{"line":36,"column":24},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":26,"column":24}},{"name":"pairs","generated":{"line":37,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":4}},{"name":"pairs","generated":{"line":37,"column":10},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":10}},{"name":"length","generated":{"line":37,"column":16},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":16}},{"generated":{"line":37,"column":22},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":4}},{"generated":{"line":37,"column":26},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":26}},{"name":"prop","generated":{"line":37,"column":27},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":27}},{"generated":{"line":37,"column":31},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":26}},{"name":"obj","generated":{"line":37,"column":33},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":33}},{"name":"prop","generated":{"line":37,"column":37},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":37}},{"generated":{"line":37,"column":41},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":33}},{"generated":{"line":37,"column":42},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":26}},{"generated":{"line":37,"column":43},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":27,"column":4}},{"generated":{"line":38,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":28,"column":3}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":29,"column":2}},{"name":"pairs","generated":{"line":39,"column":9},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":29,"column":9}},{"generated":{"line":39,"column":14},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":29,"column":2}},{"generated":{"line":40,"column":0},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":30,"column":1}},{"generated":{"line":40,"column":1},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":29}},{"generated":{"line":40,"column":2},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":24,"column":0}},{"name":"toPairsIn","generated":{"line":41,"column":18},"source":"..\\node_modules\\ramda\\es\\toPairsIn.js","original":{"line":31,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\toPairsIn.js":"import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;"},"lineCount":null}},"hash":"bfabcbf458c412eb9132efeb8789af85","cacheData":{"env":{}}}