{"id":"..\\node_modules\\ramda\\es\\invert.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry1","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\invert.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./internal/_has","loc":{"line":2,"column":17},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\invert.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_has.js"},{"name":"./keys","loc":{"line":3,"column":17},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\invert.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\keys.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry1');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _has2 = require('./internal/_has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _keys = require('./keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/(0, _curry2.default)(function invert(obj) {\n  var props = (0, _keys2.default)(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = (0, _has3.default)(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexports.default = invert;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":5,"column":0}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":0}},{"name":"invert","generated":{"line":43,"column":4},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":4}},{"generated":{"line":43,"column":13},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":13}},{"generated":{"line":43,"column":26},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":26}},{"generated":{"line":43,"column":47},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":34}},{"name":"invert","generated":{"line":43,"column":56},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":43}},{"generated":{"line":43,"column":62},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":34}},{"name":"obj","generated":{"line":43,"column":63},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":50}},{"generated":{"line":43,"column":66},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":34}},{"generated":{"line":43,"column":68},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":55}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":28,"column":2}},{"name":"props","generated":{"line":44,"column":6},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":28,"column":6}},{"generated":{"line":44,"column":14},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":28,"column":14}},{"name":"obj","generated":{"line":44,"column":34},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":28,"column":19}},{"generated":{"line":44,"column":37},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":28,"column":14}},{"generated":{"line":44,"column":38},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":28,"column":2}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":29,"column":2}},{"name":"len","generated":{"line":45,"column":6},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":29,"column":6}},{"name":"props","generated":{"line":45,"column":12},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":29,"column":12}},{"name":"length","generated":{"line":45,"column":18},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":29,"column":18}},{"generated":{"line":45,"column":24},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":29,"column":2}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":30,"column":2}},{"name":"idx","generated":{"line":46,"column":6},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":30,"column":6}},{"generated":{"line":46,"column":12},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":30,"column":12}},{"generated":{"line":46,"column":13},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":30,"column":2}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":31,"column":2}},{"name":"out","generated":{"line":47,"column":6},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":31,"column":6}},{"generated":{"line":47,"column":12},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":31,"column":12}},{"generated":{"line":47,"column":14},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":31,"column":2}},{"generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":33,"column":2}},{"name":"idx","generated":{"line":49,"column":9},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":33,"column":9}},{"name":"len","generated":{"line":49,"column":15},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":33,"column":15}},{"generated":{"line":49,"column":18},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":33,"column":2}},{"generated":{"line":49,"column":20},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":33,"column":20}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":34,"column":4}},{"name":"key","generated":{"line":50,"column":8},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":34,"column":8}},{"name":"props","generated":{"line":50,"column":14},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":34,"column":14}},{"name":"idx","generated":{"line":50,"column":20},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":34,"column":20}},{"generated":{"line":50,"column":23},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":34,"column":14}},{"generated":{"line":50,"column":24},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":34,"column":4}},{"generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":35,"column":4}},{"name":"val","generated":{"line":51,"column":8},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":35,"column":8}},{"name":"obj","generated":{"line":51,"column":14},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":35,"column":14}},{"name":"key","generated":{"line":51,"column":18},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":35,"column":18}},{"generated":{"line":51,"column":21},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":35,"column":14}},{"generated":{"line":51,"column":22},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":35,"column":4}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":4}},{"name":"list","generated":{"line":52,"column":8},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":8}},{"generated":{"line":52,"column":15},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":15}},{"name":"val","generated":{"line":52,"column":34},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":20}},{"generated":{"line":52,"column":37},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":15}},{"name":"out","generated":{"line":52,"column":39},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":25}},{"generated":{"line":52,"column":42},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":15}},{"name":"out","generated":{"line":52,"column":46},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":32}},{"name":"val","generated":{"line":52,"column":50},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":36}},{"generated":{"line":52,"column":53},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":32}},{"generated":{"line":52,"column":54},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":15}},{"name":"out","generated":{"line":52,"column":57},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":43}},{"name":"val","generated":{"line":52,"column":61},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":47}},{"generated":{"line":52,"column":64},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":43}},{"generated":{"line":52,"column":68},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":54}},{"generated":{"line":52,"column":70},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":36,"column":4}},{"name":"list","generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":37,"column":4}},{"name":"list","generated":{"line":53,"column":9},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":37,"column":9}},{"name":"length","generated":{"line":53,"column":14},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":37,"column":14}},{"generated":{"line":53,"column":20},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":37,"column":4}},{"name":"key","generated":{"line":53,"column":24},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":37,"column":24}},{"generated":{"line":53,"column":27},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":37,"column":4}},{"name":"idx","generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":38,"column":4}},{"generated":{"line":54,"column":11},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":38,"column":11}},{"generated":{"line":54,"column":12},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":38,"column":4}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":39,"column":3}},{"generated":{"line":56,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":40,"column":2}},{"name":"out","generated":{"line":56,"column":9},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":40,"column":9}},{"generated":{"line":56,"column":12},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":40,"column":2}},{"generated":{"line":57,"column":0},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":41,"column":1}},{"generated":{"line":57,"column":1},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":26}},{"generated":{"line":57,"column":2},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":27,"column":0}},{"name":"invert","generated":{"line":58,"column":18},"source":"..\\node_modules\\ramda\\es\\invert.js","original":{"line":42,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\invert.js":"import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;"},"lineCount":null}},"hash":"2a805469d5acb4dae3c4f7b02521a494","cacheData":{"env":{}}}