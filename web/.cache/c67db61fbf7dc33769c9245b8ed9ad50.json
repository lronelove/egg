{"id":"..\\node_modules\\ramda\\es\\empty.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry1","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\empty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./internal/_isArguments","loc":{"line":2,"column":25},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\empty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_isArguments.js"},{"name":"./internal/_isArray","loc":{"line":3,"column":21},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\empty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_isArray.js"},{"name":"./internal/_isObject","loc":{"line":4,"column":22},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\empty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_isObject.js"},{"name":"./internal/_isString","loc":{"line":5,"column":22},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\empty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_isString.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry1');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _isArguments2 = require('./internal/_isArguments');\n\nvar _isArguments3 = _interopRequireDefault(_isArguments2);\n\nvar _isArray2 = require('./internal/_isArray');\n\nvar _isArray3 = _interopRequireDefault(_isArray2);\n\nvar _isObject2 = require('./internal/_isObject');\n\nvar _isObject3 = _interopRequireDefault(_isObject2);\n\nvar _isString2 = require('./internal/_isString');\n\nvar _isString3 = _interopRequireDefault(_isString2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/(0, _curry2.default)(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : (0, _isArray3.default)(x) ? [] : (0, _isString3.default)(x) ? '' : (0, _isObject3.default)(x) ? {} : (0, _isArguments3.default)(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexports.default = empty;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":5,"column":0}},{"generated":{"line":29,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":7,"column":0}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":0}},{"name":"empty","generated":{"line":52,"column":4},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":4}},{"generated":{"line":52,"column":12},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":12}},{"generated":{"line":52,"column":25},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":25}},{"generated":{"line":52,"column":46},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":33}},{"name":"empty","generated":{"line":52,"column":55},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":42}},{"generated":{"line":52,"column":60},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":33}},{"name":"x","generated":{"line":52,"column":61},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":48}},{"generated":{"line":52,"column":62},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":33}},{"generated":{"line":52,"column":64},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":51}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":2}},{"name":"x","generated":{"line":53,"column":9},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":9}},{"generated":{"line":53,"column":14},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":14}},{"generated":{"line":53,"column":18},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":9}},{"generated":{"line":53,"column":22},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":22}},{"name":"x","generated":{"line":53,"column":29},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":29}},{"generated":{"line":53,"column":31},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":31}},{"generated":{"line":53,"column":51},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":29}},{"generated":{"line":53,"column":52},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":22}},{"generated":{"line":53,"column":57},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":57}},{"generated":{"line":53,"column":67},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":9}},{"name":"x","generated":{"line":53,"column":70},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":70}},{"generated":{"line":53,"column":72},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":72}},{"generated":{"line":53,"column":92},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":70}},{"generated":{"line":53,"column":95},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":9}},{"name":"x","generated":{"line":53,"column":98},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":98}},{"generated":{"line":53,"column":103},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":103}},{"generated":{"line":53,"column":107},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":98}},{"name":"x","generated":{"line":53,"column":111},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":111}},{"name":"constructor","generated":{"line":53,"column":113},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":113}},{"generated":{"line":53,"column":124},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":111}},{"generated":{"line":53,"column":128},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":128}},{"generated":{"line":53,"column":132},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":98}},{"generated":{"line":53,"column":136},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":136}},{"name":"x","generated":{"line":53,"column":143},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":143}},{"name":"constructor","generated":{"line":53,"column":145},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":145}},{"generated":{"line":53,"column":156},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":143}},{"generated":{"line":53,"column":157},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":157}},{"generated":{"line":53,"column":177},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":143}},{"generated":{"line":53,"column":178},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":136}},{"generated":{"line":53,"column":183},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":183}},{"generated":{"line":53,"column":193},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":98}},{"name":"x","generated":{"line":53,"column":196},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":196}},{"name":"constructor","generated":{"line":53,"column":198},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":198}},{"generated":{"line":53,"column":209},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":196}},{"generated":{"line":53,"column":210},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":210}},{"generated":{"line":53,"column":230},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":196}},{"generated":{"line":53,"column":233},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":98}},{"name":"x","generated":{"line":53,"column":236},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":236}},{"generated":{"line":53,"column":241},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":241}},{"generated":{"line":53,"column":245},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":236}},{"generated":{"line":53,"column":249},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":249}},{"name":"x","generated":{"line":53,"column":256},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":256}},{"name":"empty","generated":{"line":53,"column":258},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":258}},{"generated":{"line":53,"column":263},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":249}},{"generated":{"line":53,"column":268},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":268}},{"generated":{"line":53,"column":278},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":236}},{"name":"x","generated":{"line":53,"column":281},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":281}},{"name":"empty","generated":{"line":53,"column":283},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":283}},{"generated":{"line":53,"column":288},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":281}},{"generated":{"line":53,"column":290},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":236}},{"name":"x","generated":{"line":53,"column":293},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":293}},{"generated":{"line":53,"column":298},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":298}},{"generated":{"line":53,"column":302},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":293}},{"name":"x","generated":{"line":53,"column":306},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":306}},{"name":"constructor","generated":{"line":53,"column":308},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":308}},{"generated":{"line":53,"column":319},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":306}},{"generated":{"line":53,"column":323},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":323}},{"generated":{"line":53,"column":327},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":293}},{"generated":{"line":53,"column":331},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":331}},{"name":"x","generated":{"line":53,"column":338},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":338}},{"name":"constructor","generated":{"line":53,"column":340},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":340}},{"generated":{"line":53,"column":351},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":338}},{"name":"empty","generated":{"line":53,"column":352},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":352}},{"generated":{"line":53,"column":357},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":331}},{"generated":{"line":53,"column":362},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":362}},{"generated":{"line":53,"column":372},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":293}},{"name":"x","generated":{"line":53,"column":375},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":375}},{"name":"constructor","generated":{"line":53,"column":377},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":377}},{"generated":{"line":53,"column":388},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":375}},{"name":"empty","generated":{"line":53,"column":389},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":389}},{"generated":{"line":53,"column":394},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":375}},{"generated":{"line":53,"column":396},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":293}},{"generated":{"line":53,"column":399},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":399}},{"name":"x","generated":{"line":53,"column":422},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":408}},{"generated":{"line":53,"column":423},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":399}},{"generated":{"line":53,"column":427},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":413}},{"generated":{"line":53,"column":429},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":399}},{"generated":{"line":53,"column":432},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":418}},{"name":"x","generated":{"line":53,"column":456},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":428}},{"generated":{"line":53,"column":457},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":418}},{"generated":{"line":53,"column":461},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":433}},{"generated":{"line":53,"column":463},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":418}},{"generated":{"line":53,"column":466},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":438}},{"name":"x","generated":{"line":53,"column":490},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":448}},{"generated":{"line":53,"column":491},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":438}},{"generated":{"line":53,"column":495},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":453}},{"generated":{"line":53,"column":497},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":438}},{"generated":{"line":53,"column":500},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":458}},{"name":"x","generated":{"line":53,"column":527},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":471}},{"generated":{"line":53,"column":528},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":458}},{"generated":{"line":53,"column":532},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":476}},{"generated":{"line":53,"column":544},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":488}},{"generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":32,"column":4}},{"name":"arguments","generated":{"line":54,"column":11},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":32,"column":11}},{"generated":{"line":54,"column":20},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":32,"column":4}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":33,"column":3}},{"generated":{"line":55,"column":3},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":476}},{"generated":{"line":55,"column":5},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":458}},{"generated":{"line":56,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":34,"column":2}},{"generated":{"line":57,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":35,"column":2}},{"generated":{"line":57,"column":7},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":35,"column":7}},{"generated":{"line":57,"column":8},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":31,"column":2}},{"generated":{"line":58,"column":0},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":36,"column":1}},{"generated":{"line":58,"column":1},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":25}},{"generated":{"line":58,"column":2},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":30,"column":0}},{"name":"empty","generated":{"line":59,"column":18},"source":"..\\node_modules\\ramda\\es\\empty.js","original":{"line":37,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\empty.js":"import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;"},"lineCount":null}},"hash":"61eb097f2eea49b0e92cb5611f9180f5","cacheData":{"env":{}}}