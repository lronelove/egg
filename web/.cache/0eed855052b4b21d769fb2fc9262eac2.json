{"id":"..\\node_modules\\ramda\\es\\until.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\until.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/(0, _curry2.default)(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexports.default = until;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":0}},{"name":"until","generated":{"line":32,"column":4},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":4}},{"generated":{"line":32,"column":12},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":12}},{"generated":{"line":32,"column":25},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":25}},{"generated":{"line":32,"column":46},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":33}},{"name":"until","generated":{"line":32,"column":55},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":42}},{"generated":{"line":32,"column":60},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":33}},{"name":"pred","generated":{"line":32,"column":61},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":48}},{"generated":{"line":32,"column":65},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":33}},{"name":"fn","generated":{"line":32,"column":67},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":54}},{"generated":{"line":32,"column":69},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":33}},{"name":"init","generated":{"line":32,"column":71},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":58}},{"generated":{"line":32,"column":75},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":33}},{"generated":{"line":32,"column":77},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":64}},{"generated":{"line":33,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":23,"column":2}},{"name":"val","generated":{"line":33,"column":6},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":23,"column":6}},{"name":"init","generated":{"line":33,"column":12},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":23,"column":12}},{"generated":{"line":33,"column":16},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":23,"column":2}},{"generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":24,"column":2}},{"generated":{"line":34,"column":9},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":24,"column":9}},{"name":"pred","generated":{"line":34,"column":10},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":24,"column":10}},{"name":"val","generated":{"line":34,"column":15},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":24,"column":15}},{"generated":{"line":34,"column":18},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":24,"column":10}},{"generated":{"line":34,"column":19},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":24,"column":2}},{"generated":{"line":34,"column":21},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":24,"column":21}},{"name":"val","generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":25,"column":4}},{"name":"fn","generated":{"line":35,"column":10},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":25,"column":10}},{"name":"val","generated":{"line":35,"column":13},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":25,"column":13}},{"generated":{"line":35,"column":16},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":25,"column":10}},{"generated":{"line":35,"column":17},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":25,"column":4}},{"generated":{"line":36,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":26,"column":3}},{"generated":{"line":37,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":27,"column":2}},{"name":"val","generated":{"line":37,"column":9},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":27,"column":9}},{"generated":{"line":37,"column":12},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":27,"column":2}},{"generated":{"line":38,"column":0},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":28,"column":1}},{"generated":{"line":38,"column":1},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":25}},{"generated":{"line":38,"column":2},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":22,"column":0}},{"name":"until","generated":{"line":39,"column":18},"source":"..\\node_modules\\ramda\\es\\until.js","original":{"line":29,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\until.js":"import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;"},"lineCount":null}},"hash":"fd7705de1e3726abb40b80d41ed3527f","cacheData":{"env":{}}}