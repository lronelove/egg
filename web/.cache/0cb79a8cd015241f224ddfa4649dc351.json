{"id":"..\\node_modules\\ramda\\es\\update.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\update.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry3.js"},{"name":"./adjust","loc":{"line":2,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\update.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\adjust.js"},{"name":"./always","loc":{"line":3,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\update.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\always.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _adjust = require('./adjust');\n\nvar _adjust2 = _interopRequireDefault(_adjust);\n\nvar _always = require('./always');\n\nvar _always2 = _interopRequireDefault(_always);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/(0, _curry2.default)(function update(idx, x, list) {\n  return (0, _adjust2.default)((0, _always2.default)(x), idx, list);\n});\nexports.default = update;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":5,"column":0}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":0}},{"name":"update","generated":{"line":43,"column":4},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":4}},{"generated":{"line":43,"column":13},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":13}},{"generated":{"line":43,"column":26},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":26}},{"generated":{"line":43,"column":47},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":34}},{"name":"update","generated":{"line":43,"column":56},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":43}},{"generated":{"line":43,"column":62},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":34}},{"name":"idx","generated":{"line":43,"column":63},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":50}},{"generated":{"line":43,"column":66},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":34}},{"name":"x","generated":{"line":43,"column":68},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":55}},{"generated":{"line":43,"column":69},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":34}},{"name":"list","generated":{"line":43,"column":71},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":58}},{"generated":{"line":43,"column":75},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":34}},{"generated":{"line":43,"column":77},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":64}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":2}},{"generated":{"line":44,"column":9},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":9}},{"generated":{"line":44,"column":31},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":16}},{"name":"x","generated":{"line":44,"column":53},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":23}},{"generated":{"line":44,"column":54},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":16}},{"generated":{"line":44,"column":55},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":9}},{"name":"idx","generated":{"line":44,"column":57},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":27}},{"generated":{"line":44,"column":60},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":9}},{"name":"list","generated":{"line":44,"column":62},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":32}},{"generated":{"line":44,"column":66},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":9}},{"generated":{"line":44,"column":67},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":28,"column":2}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":29,"column":1}},{"generated":{"line":45,"column":1},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":26}},{"generated":{"line":45,"column":2},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":27,"column":0}},{"name":"update","generated":{"line":46,"column":18},"source":"..\\node_modules\\ramda\\es\\update.js","original":{"line":30,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\update.js":"import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;"},"lineCount":null}},"hash":"73901606f4219f5ba7c35085c2ac801a","cacheData":{"env":{}}}