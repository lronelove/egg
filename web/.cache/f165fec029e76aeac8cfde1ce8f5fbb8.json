{"id":"..\\node_modules\\ramda\\es\\whereEq.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\whereEq.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./equals","loc":{"line":2,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\whereEq.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\equals.js"},{"name":"./map","loc":{"line":3,"column":16},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\whereEq.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\map.js"},{"name":"./where","loc":{"line":4,"column":18},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\whereEq.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\where.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _equals = require('./equals');\n\nvar _equals2 = _interopRequireDefault(_equals);\n\nvar _map = require('./map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _where = require('./where');\n\nvar _where2 = _interopRequireDefault(_where);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/(0, _curry3.default)(function whereEq(spec, testObj) {\n  return (0, _where2.default)((0, _map2.default)(_equals2.default, spec), testObj);\n});\nexports.default = whereEq;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":6,"column":0}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":0}},{"name":"whereEq","generated":{"line":53,"column":4},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":4}},{"generated":{"line":53,"column":14},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":14}},{"generated":{"line":53,"column":27},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":27}},{"generated":{"line":53,"column":48},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":35}},{"name":"whereEq","generated":{"line":53,"column":57},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":44}},{"generated":{"line":53,"column":64},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":35}},{"name":"spec","generated":{"line":53,"column":65},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":52}},{"generated":{"line":53,"column":69},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":35}},{"name":"testObj","generated":{"line":53,"column":71},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":58}},{"generated":{"line":53,"column":78},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":35}},{"generated":{"line":53,"column":80},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":67}},{"generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":2}},{"generated":{"line":54,"column":9},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":9}},{"generated":{"line":54,"column":30},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":15}},{"name":"equals","generated":{"line":54,"column":49},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":19}},{"generated":{"line":54,"column":65},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":15}},{"name":"spec","generated":{"line":54,"column":67},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":27}},{"generated":{"line":54,"column":71},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":15}},{"generated":{"line":54,"column":72},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":9}},{"name":"testObj","generated":{"line":54,"column":74},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":34}},{"generated":{"line":54,"column":81},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":9}},{"generated":{"line":54,"column":82},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":35,"column":2}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":36,"column":1}},{"generated":{"line":55,"column":1},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":27}},{"generated":{"line":55,"column":2},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":34,"column":0}},{"name":"whereEq","generated":{"line":56,"column":18},"source":"..\\node_modules\\ramda\\es\\whereEq.js","original":{"line":37,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\whereEq.js":"import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;"},"lineCount":null}},"hash":"f239cc82bb272a84dc246c8bd8e2a1a6","cacheData":{"env":{}}}