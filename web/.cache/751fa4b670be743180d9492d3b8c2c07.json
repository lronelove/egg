{"id":"..\\node_modules\\ramda\\es\\pipeP.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_arity","loc":{"line":1,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\pipeP.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_arity.js"},{"name":"./internal/_pipeP","loc":{"line":2,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\pipeP.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_pipeP.js"},{"name":"./reduce","loc":{"line":3,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\pipeP.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\reduce.js"},{"name":"./tail","loc":{"line":4,"column":17},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\pipeP.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\tail.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pipeP;\n\nvar _arity2 = require('./internal/_arity');\n\nvar _arity3 = _interopRequireDefault(_arity2);\n\nvar _pipeP2 = require('./internal/_pipeP');\n\nvar _pipeP3 = _interopRequireDefault(_pipeP2);\n\nvar _reduce = require('./reduce');\n\nvar _reduce2 = _interopRequireDefault(_reduce);\n\nvar _tail = require('./tail');\n\nvar _tail2 = _interopRequireDefault(_tail);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nfunction pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return (0, _arity3.default)(arguments[0].length, (0, _reduce2.default)(_pipeP3.default, arguments[0], (0, _tail2.default)(arguments)));\n}","map":{"mappings":[{"name":"pipeP","generated":{"line":6,"column":18},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":24,"column":24}},{"generated":{"line":8,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":4,"column":0}},{"generated":{"line":26,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":6,"column":0}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":24,"column":15}},{"name":"pipeP","generated":{"line":44,"column":9},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":24,"column":24}},{"generated":{"line":44,"column":14},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":24,"column":15}},{"generated":{"line":44,"column":17},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":24,"column":32}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":25,"column":2}},{"name":"arguments","generated":{"line":45,"column":6},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":25,"column":6}},{"name":"length","generated":{"line":45,"column":16},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":25,"column":16}},{"generated":{"line":45,"column":22},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":25,"column":6}},{"generated":{"line":45,"column":27},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":25,"column":27}},{"generated":{"line":45,"column":28},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":25,"column":2}},{"generated":{"line":45,"column":30},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":25,"column":30}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":26,"column":4}},{"generated":{"line":46,"column":10},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":26,"column":10}},{"name":"Error","generated":{"line":46,"column":14},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":26,"column":14}},{"generated":{"line":46,"column":19},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":26,"column":10}},{"generated":{"line":46,"column":20},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":26,"column":20}},{"generated":{"line":46,"column":58},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":26,"column":10}},{"generated":{"line":46,"column":59},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":26,"column":4}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":27,"column":3}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":2}},{"generated":{"line":48,"column":9},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":9}},{"name":"arguments","generated":{"line":48,"column":30},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":16}},{"generated":{"line":48,"column":40},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":26}},{"generated":{"line":48,"column":41},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":16}},{"name":"length","generated":{"line":48,"column":43},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":29}},{"generated":{"line":48,"column":49},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":9}},{"generated":{"line":48,"column":51},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":37}},{"name":"_pipeP","generated":{"line":48,"column":73},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":44}},{"generated":{"line":48,"column":88},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":37}},{"name":"arguments","generated":{"line":48,"column":90},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":52}},{"generated":{"line":48,"column":100},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":62}},{"generated":{"line":48,"column":101},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":52}},{"generated":{"line":48,"column":102},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":37}},{"generated":{"line":48,"column":104},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":66}},{"name":"arguments","generated":{"line":48,"column":124},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":71}},{"generated":{"line":48,"column":133},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":66}},{"generated":{"line":48,"column":134},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":37}},{"generated":{"line":48,"column":135},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":9}},{"generated":{"line":48,"column":136},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":28,"column":2}},{"generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\pipeP.js","original":{"line":29,"column":1}}],"sources":{"..\\node_modules\\ramda\\es\\pipeP.js":"import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}"},"lineCount":null}},"hash":"cf2e9c95f52521f7fa1041fe9c9a4e1b","cacheData":{"env":{}}}