{"id":"..\\node_modules\\ramda\\es\\either.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\either.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_isFunction","loc":{"line":2,"column":24},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\either.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_isFunction.js"},{"name":"./lift","loc":{"line":3,"column":17},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\either.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\lift.js"},{"name":"./or","loc":{"line":4,"column":15},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\either.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\or.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _isFunction2 = require('./internal/_isFunction');\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nvar _lift = require('./lift');\n\nvar _lift2 = _interopRequireDefault(_lift);\n\nvar _or = require('./or');\n\nvar _or2 = _interopRequireDefault(_or);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/(0, _curry3.default)(function either(f, g) {\n  return (0, _isFunction3.default)(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : (0, _lift2.default)(_or2.default)(f, g);\n});\nexports.default = either;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":6,"column":0}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":0}},{"name":"either","generated":{"line":52,"column":4},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":4}},{"generated":{"line":52,"column":13},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":13}},{"generated":{"line":52,"column":26},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":26}},{"generated":{"line":52,"column":47},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":34}},{"name":"either","generated":{"line":52,"column":56},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":43}},{"generated":{"line":52,"column":62},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":34}},{"name":"f","generated":{"line":52,"column":63},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":50}},{"generated":{"line":52,"column":64},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":34}},{"name":"g","generated":{"line":52,"column":66},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":53}},{"generated":{"line":52,"column":67},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":34}},{"generated":{"line":52,"column":69},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":56}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":2}},{"generated":{"line":53,"column":9},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":9}},{"name":"f","generated":{"line":53,"column":35},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":21}},{"generated":{"line":53,"column":36},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":9}},{"generated":{"line":53,"column":40},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":26}},{"name":"_either","generated":{"line":53,"column":49},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":35}},{"generated":{"line":53,"column":56},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":26}},{"generated":{"line":53,"column":59},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":45}},{"generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":4}},{"name":"f","generated":{"line":54,"column":11},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":11}},{"name":"apply","generated":{"line":54,"column":13},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":13}},{"generated":{"line":54,"column":18},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":11}},{"generated":{"line":54,"column":19},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":19}},{"generated":{"line":54,"column":23},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":11}},{"name":"arguments","generated":{"line":54,"column":25},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":25}},{"generated":{"line":54,"column":34},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":11}},{"name":"g","generated":{"line":54,"column":39},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":39}},{"name":"apply","generated":{"line":54,"column":41},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":41}},{"generated":{"line":54,"column":46},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":39}},{"generated":{"line":54,"column":47},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":47}},{"generated":{"line":54,"column":51},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":39}},{"name":"arguments","generated":{"line":54,"column":53},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":53}},{"generated":{"line":54,"column":62},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":39}},{"generated":{"line":54,"column":63},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":35,"column":4}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":3}},{"generated":{"line":55,"column":3},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":9}},{"generated":{"line":55,"column":6},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":6}},{"name":"or","generated":{"line":55,"column":26},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":11}},{"generated":{"line":55,"column":38},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":6}},{"name":"f","generated":{"line":55,"column":40},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":15}},{"generated":{"line":55,"column":41},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":6}},{"name":"g","generated":{"line":55,"column":43},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":18}},{"generated":{"line":55,"column":44},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":36,"column":6}},{"generated":{"line":55,"column":45},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":34,"column":2}},{"generated":{"line":56,"column":0},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":37,"column":1}},{"generated":{"line":56,"column":1},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":26}},{"generated":{"line":56,"column":2},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":33,"column":0}},{"name":"either","generated":{"line":57,"column":18},"source":"..\\node_modules\\ramda\\es\\either.js","original":{"line":38,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\either.js":"import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;"},"lineCount":null}},"hash":"26099c76343498700cb6467a9424ca3c","cacheData":{"env":{}}}