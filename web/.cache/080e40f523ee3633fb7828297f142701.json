{"id":"..\\node_modules\\ramda\\es\\uniqWith.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_containsWith","loc":{"line":1,"column":26},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\uniqWith.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_containsWith.js"},{"name":"./internal/_curry2","loc":{"line":2,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\uniqWith.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry2.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _containsWith2 = require('./internal/_containsWith');\n\nvar _containsWith3 = _interopRequireDefault(_containsWith2);\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/(0, _curry3.default)(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!(0, _containsWith3.default)(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexports.default = uniqWith;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":4,"column":0}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":0}},{"name":"uniqWith","generated":{"line":39,"column":4},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":4}},{"generated":{"line":39,"column":15},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":15}},{"generated":{"line":39,"column":28},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":28}},{"generated":{"line":39,"column":49},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":36}},{"name":"uniqWith","generated":{"line":39,"column":58},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":45}},{"generated":{"line":39,"column":66},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":36}},{"name":"pred","generated":{"line":39,"column":67},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":54}},{"generated":{"line":39,"column":71},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":36}},{"name":"list","generated":{"line":39,"column":73},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":60}},{"generated":{"line":39,"column":77},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":36}},{"generated":{"line":39,"column":79},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":66}},{"generated":{"line":40,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":27,"column":2}},{"name":"idx","generated":{"line":40,"column":6},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":27,"column":6}},{"generated":{"line":40,"column":12},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":27,"column":12}},{"generated":{"line":40,"column":13},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":27,"column":2}},{"generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":28,"column":2}},{"name":"len","generated":{"line":41,"column":6},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":28,"column":6}},{"name":"list","generated":{"line":41,"column":12},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":28,"column":12}},{"name":"length","generated":{"line":41,"column":17},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":28,"column":17}},{"generated":{"line":41,"column":23},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":28,"column":2}},{"generated":{"line":42,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":29,"column":2}},{"name":"result","generated":{"line":42,"column":6},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":29,"column":6}},{"generated":{"line":42,"column":15},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":29,"column":15}},{"generated":{"line":42,"column":17},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":29,"column":2}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":30,"column":2}},{"name":"item","generated":{"line":43,"column":6},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":30,"column":6}},{"generated":{"line":43,"column":10},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":30,"column":2}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":31,"column":2}},{"name":"idx","generated":{"line":44,"column":9},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":31,"column":9}},{"name":"len","generated":{"line":44,"column":15},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":31,"column":15}},{"generated":{"line":44,"column":18},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":31,"column":2}},{"generated":{"line":44,"column":20},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":31,"column":20}},{"name":"item","generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":32,"column":4}},{"name":"list","generated":{"line":45,"column":11},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":32,"column":11}},{"name":"idx","generated":{"line":45,"column":16},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":32,"column":16}},{"generated":{"line":45,"column":19},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":32,"column":11}},{"generated":{"line":45,"column":20},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":32,"column":4}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":4}},{"generated":{"line":46,"column":8},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":8}},{"generated":{"line":46,"column":9},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":9}},{"name":"pred","generated":{"line":46,"column":37},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":23}},{"generated":{"line":46,"column":41},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":9}},{"name":"item","generated":{"line":46,"column":43},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":29}},{"generated":{"line":46,"column":47},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":9}},{"name":"result","generated":{"line":46,"column":49},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":35}},{"generated":{"line":46,"column":55},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":9}},{"generated":{"line":46,"column":56},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":4}},{"generated":{"line":46,"column":58},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":33,"column":44}},{"name":"result","generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":34,"column":6}},{"name":"result","generated":{"line":47,"column":13},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":34,"column":13}},{"name":"length","generated":{"line":47,"column":20},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":34,"column":20}},{"generated":{"line":47,"column":26},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":34,"column":6}},{"name":"item","generated":{"line":47,"column":30},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":34,"column":30}},{"generated":{"line":47,"column":34},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":34,"column":6}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":35,"column":5}},{"name":"idx","generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":36,"column":4}},{"generated":{"line":49,"column":11},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":36,"column":11}},{"generated":{"line":49,"column":12},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":36,"column":4}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":37,"column":3}},{"generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":38,"column":2}},{"name":"result","generated":{"line":51,"column":9},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":38,"column":9}},{"generated":{"line":51,"column":15},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":38,"column":2}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":39,"column":1}},{"generated":{"line":52,"column":1},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":28}},{"generated":{"line":52,"column":2},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":26,"column":0}},{"name":"uniqWith","generated":{"line":53,"column":18},"source":"..\\node_modules\\ramda\\es\\uniqWith.js","original":{"line":40,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\uniqWith.js":"import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;"},"lineCount":null}},"hash":"0f6bf2e0f99bcda7e055622a1f65e672","cacheData":{"env":{}}}