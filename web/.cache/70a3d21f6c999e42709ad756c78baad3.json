{"id":"..\\node_modules\\ramda\\es\\construct.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_curry1","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\construct.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./constructN","loc":{"line":2,"column":23},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\construct.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\constructN.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry1');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _constructN = require('./constructN');\n\nvar _constructN2 = _interopRequireDefault(_constructN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/(0, _curry2.default)(function construct(Fn) {\n  return (0, _constructN2.default)(Fn.length, Fn);\n});\nexports.default = construct;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":4,"column":0}},{"generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":0}},{"name":"construct","generated":{"line":49,"column":4},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":4}},{"generated":{"line":49,"column":16},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":16}},{"generated":{"line":49,"column":29},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":29}},{"generated":{"line":49,"column":50},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":37}},{"name":"construct","generated":{"line":49,"column":59},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":46}},{"generated":{"line":49,"column":68},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":37}},{"name":"Fn","generated":{"line":49,"column":69},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":56}},{"generated":{"line":49,"column":71},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":37}},{"generated":{"line":49,"column":73},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":60}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":2}},{"generated":{"line":50,"column":9},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":9}},{"name":"Fn","generated":{"line":50,"column":35},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":20}},{"name":"length","generated":{"line":50,"column":38},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":23}},{"generated":{"line":50,"column":44},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":9}},{"name":"Fn","generated":{"line":50,"column":46},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":31}},{"generated":{"line":50,"column":48},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":9}},{"generated":{"line":50,"column":49},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":37,"column":2}},{"generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":38,"column":1}},{"generated":{"line":51,"column":1},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":29}},{"generated":{"line":51,"column":2},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":36,"column":0}},{"name":"construct","generated":{"line":52,"column":18},"source":"..\\node_modules\\ramda\\es\\construct.js","original":{"line":39,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\construct.js":"import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;"},"lineCount":null}},"hash":"ab5835cf30cd891aa3c1116275178e0c","cacheData":{"env":{}}}