{"id":"..\\node_modules\\ramda\\es\\difference.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_contains","loc":{"line":1,"column":22},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\difference.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_contains.js"},{"name":"./internal/_curry2","loc":{"line":2,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\difference.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _contains2 = require('./internal/_contains');\n\nvar _contains3 = _interopRequireDefault(_contains2);\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/(0, _curry3.default)(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!(0, _contains3.default)(first[idx], second) && !(0, _contains3.default)(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexports.default = difference;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":4,"column":0}},{"generated":{"line":37,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":0}},{"name":"difference","generated":{"line":37,"column":4},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":4}},{"generated":{"line":37,"column":17},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":17}},{"generated":{"line":37,"column":30},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":30}},{"generated":{"line":37,"column":51},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":38}},{"name":"difference","generated":{"line":37,"column":60},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":47}},{"generated":{"line":37,"column":70},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":38}},{"name":"first","generated":{"line":37,"column":71},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":58}},{"generated":{"line":37,"column":76},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":38}},{"name":"second","generated":{"line":37,"column":78},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":65}},{"generated":{"line":37,"column":84},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":38}},{"generated":{"line":37,"column":86},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":73}},{"generated":{"line":38,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":25,"column":2}},{"name":"out","generated":{"line":38,"column":6},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":25,"column":6}},{"generated":{"line":38,"column":12},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":25,"column":12}},{"generated":{"line":38,"column":14},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":25,"column":2}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":26,"column":2}},{"name":"idx","generated":{"line":39,"column":6},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":26,"column":6}},{"generated":{"line":39,"column":12},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":26,"column":12}},{"generated":{"line":39,"column":13},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":26,"column":2}},{"generated":{"line":40,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":27,"column":2}},{"name":"firstLen","generated":{"line":40,"column":6},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":27,"column":6}},{"name":"first","generated":{"line":40,"column":17},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":27,"column":17}},{"name":"length","generated":{"line":40,"column":23},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":27,"column":23}},{"generated":{"line":40,"column":29},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":27,"column":2}},{"generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":28,"column":2}},{"name":"idx","generated":{"line":41,"column":9},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":28,"column":9}},{"name":"firstLen","generated":{"line":41,"column":15},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":28,"column":15}},{"generated":{"line":41,"column":23},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":28,"column":2}},{"generated":{"line":41,"column":25},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":28,"column":25}},{"generated":{"line":42,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":4}},{"generated":{"line":42,"column":8},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":8}},{"generated":{"line":42,"column":9},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":9}},{"name":"first","generated":{"line":42,"column":33},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":19}},{"name":"idx","generated":{"line":42,"column":39},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":25}},{"generated":{"line":42,"column":42},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":19}},{"generated":{"line":42,"column":43},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":9}},{"name":"second","generated":{"line":42,"column":45},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":31}},{"generated":{"line":42,"column":51},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":9}},{"generated":{"line":42,"column":52},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":8}},{"generated":{"line":42,"column":56},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":42}},{"generated":{"line":42,"column":57},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":43}},{"name":"first","generated":{"line":42,"column":81},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":53}},{"name":"idx","generated":{"line":42,"column":87},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":59}},{"generated":{"line":42,"column":90},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":53}},{"generated":{"line":42,"column":91},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":43}},{"name":"out","generated":{"line":42,"column":93},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":65}},{"generated":{"line":42,"column":96},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":43}},{"generated":{"line":42,"column":97},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":4}},{"generated":{"line":42,"column":99},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":29,"column":71}},{"name":"out","generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":6}},{"name":"out","generated":{"line":43,"column":10},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":10}},{"name":"length","generated":{"line":43,"column":14},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":14}},{"generated":{"line":43,"column":20},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":6}},{"name":"first","generated":{"line":43,"column":24},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":24}},{"name":"idx","generated":{"line":43,"column":30},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":30}},{"generated":{"line":43,"column":33},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":24}},{"generated":{"line":43,"column":34},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":30,"column":6}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":31,"column":5}},{"name":"idx","generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":32,"column":4}},{"generated":{"line":45,"column":11},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":32,"column":11}},{"generated":{"line":45,"column":12},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":32,"column":4}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":33,"column":3}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":34,"column":2}},{"name":"out","generated":{"line":47,"column":9},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":34,"column":9}},{"generated":{"line":47,"column":12},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":34,"column":2}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":35,"column":1}},{"generated":{"line":48,"column":1},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":30}},{"generated":{"line":48,"column":2},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":24,"column":0}},{"name":"difference","generated":{"line":49,"column":18},"source":"..\\node_modules\\ramda\\es\\difference.js","original":{"line":36,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\difference.js":"import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;"},"lineCount":null}},"hash":"0d2934653358d7eedfa39236adfef512","cacheData":{"env":{}}}