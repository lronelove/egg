{"id":"..\\node_modules\\ramda\\es\\ap.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_concat","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\ap.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_concat.js"},{"name":"./internal/_curry2","loc":{"line":2,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\ap.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_reduce","loc":{"line":3,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\ap.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_reduce.js"},{"name":"./map","loc":{"line":4,"column":16},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\ap.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\map.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _concat2 = require('./internal/_concat');\n\nvar _concat3 = _interopRequireDefault(_concat2);\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _reduce2 = require('./internal/_reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _map = require('./map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/(0, _curry3.default)(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  (0, _reduce3.default)(function (acc, f) {\n    return (0, _concat3.default)(acc, (0, _map2.default)(f, applyX));\n  }, [], applyF);\n});\nexports.default = ap;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":6,"column":0}},{"generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":0}},{"name":"ap","generated":{"line":51,"column":4},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":4}},{"generated":{"line":51,"column":9},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":9}},{"generated":{"line":51,"column":22},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":22}},{"generated":{"line":51,"column":43},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":30}},{"name":"ap","generated":{"line":51,"column":52},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":39}},{"generated":{"line":51,"column":54},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":30}},{"name":"applyF","generated":{"line":51,"column":55},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":42}},{"generated":{"line":51,"column":61},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":30}},{"name":"applyX","generated":{"line":51,"column":63},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":50}},{"generated":{"line":51,"column":69},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":30}},{"generated":{"line":51,"column":71},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":58}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":2}},{"generated":{"line":52,"column":9},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":9}},{"name":"applyX","generated":{"line":52,"column":16},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":16}},{"generated":{"line":52,"column":23},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":23}},{"generated":{"line":52,"column":40},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":16}},{"generated":{"line":52,"column":41},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":9}},{"generated":{"line":52,"column":46},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":46}},{"generated":{"line":52,"column":56},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":9}},{"name":"applyX","generated":{"line":52,"column":59},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":59}},{"generated":{"line":52,"column":66},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":66}},{"generated":{"line":52,"column":83},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":59}},{"name":"applyF","generated":{"line":52,"column":85},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":85}},{"generated":{"line":52,"column":91},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":59}},{"generated":{"line":52,"column":92},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":9}},{"generated":{"line":52,"column":95},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":95}},{"name":"applyF","generated":{"line":52,"column":102},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":102}},{"name":"ap","generated":{"line":52,"column":109},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":109}},{"generated":{"line":52,"column":111},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":95}},{"generated":{"line":52,"column":116},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":116}},{"generated":{"line":52,"column":126},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":95}},{"name":"applyF","generated":{"line":52,"column":129},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":129}},{"name":"ap","generated":{"line":52,"column":136},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":136}},{"generated":{"line":52,"column":138},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":129}},{"name":"applyX","generated":{"line":52,"column":139},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":139}},{"generated":{"line":52,"column":145},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":129}},{"generated":{"line":52,"column":146},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":95}},{"generated":{"line":52,"column":149},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":149}},{"name":"applyF","generated":{"line":52,"column":156},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":156}},{"generated":{"line":52,"column":162},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":149}},{"generated":{"line":52,"column":167},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":167}},{"generated":{"line":52,"column":177},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":149}},{"generated":{"line":52,"column":180},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":180}},{"name":"x","generated":{"line":52,"column":190},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":190}},{"generated":{"line":52,"column":191},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":180}},{"generated":{"line":52,"column":193},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":193}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":4}},{"name":"applyF","generated":{"line":53,"column":11},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":11}},{"name":"x","generated":{"line":53,"column":18},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":18}},{"generated":{"line":53,"column":19},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":11}},{"name":"applyX","generated":{"line":53,"column":21},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":21}},{"name":"x","generated":{"line":53,"column":28},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":28}},{"generated":{"line":53,"column":29},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":21}},{"generated":{"line":53,"column":30},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":11}},{"generated":{"line":53,"column":31},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":34,"column":4}},{"generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":35,"column":3}},{"generated":{"line":54,"column":3},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":149}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":36,"column":2}},{"generated":{"line":56,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":2}},{"generated":{"line":56,"column":24},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":10}},{"name":"acc","generated":{"line":56,"column":34},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":20}},{"generated":{"line":56,"column":37},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":10}},{"name":"f","generated":{"line":56,"column":39},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":25}},{"generated":{"line":56,"column":40},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":10}},{"generated":{"line":56,"column":42},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":28}},{"generated":{"line":57,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":4}},{"generated":{"line":57,"column":11},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":11}},{"name":"acc","generated":{"line":57,"column":33},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":19}},{"generated":{"line":57,"column":36},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":11}},{"generated":{"line":57,"column":38},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":24}},{"name":"f","generated":{"line":57,"column":57},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":28}},{"generated":{"line":57,"column":58},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":24}},{"name":"applyX","generated":{"line":57,"column":60},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":31}},{"generated":{"line":57,"column":66},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":24}},{"generated":{"line":57,"column":67},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":11}},{"generated":{"line":57,"column":68},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":38,"column":4}},{"generated":{"line":58,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":39,"column":3}},{"generated":{"line":58,"column":3},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":2}},{"generated":{"line":58,"column":5},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":39,"column":5}},{"generated":{"line":58,"column":7},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":2}},{"name":"applyF","generated":{"line":58,"column":9},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":39,"column":9}},{"generated":{"line":58,"column":15},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":37,"column":2}},{"generated":{"line":58,"column":16},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":33,"column":2}},{"generated":{"line":59,"column":0},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":40,"column":1}},{"generated":{"line":59,"column":1},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":22}},{"generated":{"line":59,"column":2},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":32,"column":0}},{"name":"ap","generated":{"line":60,"column":18},"source":"..\\node_modules\\ramda\\es\\ap.js","original":{"line":41,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\ap.js":"import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;"},"lineCount":null}},"hash":"6d52c39156562791bcccffb5fa0ece13","cacheData":{"env":{}}}