{"id":"..\\node_modules\\ramda\\es\\lens.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\lens.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./map","loc":{"line":2,"column":16},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\lens.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\map.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _map = require('./map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/(0, _curry3.default)(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return (0, _map2.default)(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexports.default = lens;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":4,"column":0}},{"generated":{"line":40,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":0}},{"name":"lens","generated":{"line":40,"column":4},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":4}},{"generated":{"line":40,"column":11},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":11}},{"generated":{"line":40,"column":24},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":24}},{"generated":{"line":40,"column":45},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":32}},{"name":"lens","generated":{"line":40,"column":54},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":41}},{"generated":{"line":40,"column":58},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":32}},{"name":"getter","generated":{"line":40,"column":59},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":46}},{"generated":{"line":40,"column":65},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":32}},{"name":"setter","generated":{"line":40,"column":67},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":54}},{"generated":{"line":40,"column":73},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":32}},{"generated":{"line":40,"column":75},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":62}},{"generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":28,"column":2}},{"generated":{"line":41,"column":9},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":28,"column":9}},{"name":"toFunctorFn","generated":{"line":41,"column":19},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":28,"column":19}},{"generated":{"line":41,"column":30},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":28,"column":9}},{"generated":{"line":41,"column":32},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":28,"column":32}},{"generated":{"line":42,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":29,"column":4}},{"generated":{"line":42,"column":11},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":29,"column":11}},{"name":"target","generated":{"line":42,"column":21},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":29,"column":21}},{"generated":{"line":42,"column":27},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":29,"column":11}},{"generated":{"line":42,"column":29},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":29,"column":29}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":6}},{"generated":{"line":43,"column":13},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":13}},{"generated":{"line":43,"column":32},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":17}},{"name":"focus","generated":{"line":43,"column":42},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":27}},{"generated":{"line":43,"column":47},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":17}},{"generated":{"line":43,"column":49},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":34}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":31,"column":8}},{"name":"setter","generated":{"line":44,"column":15},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":31,"column":15}},{"name":"focus","generated":{"line":44,"column":22},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":31,"column":22}},{"generated":{"line":44,"column":27},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":31,"column":15}},{"name":"target","generated":{"line":44,"column":29},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":31,"column":29}},{"generated":{"line":44,"column":35},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":31,"column":15}},{"generated":{"line":44,"column":36},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":31,"column":8}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":32,"column":7}},{"generated":{"line":45,"column":7},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":13}},{"name":"toFunctorFn","generated":{"line":45,"column":9},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":32,"column":9}},{"name":"getter","generated":{"line":45,"column":21},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":32,"column":21}},{"name":"target","generated":{"line":45,"column":28},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":32,"column":28}},{"generated":{"line":45,"column":34},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":32,"column":21}},{"generated":{"line":45,"column":35},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":32,"column":9}},{"generated":{"line":45,"column":36},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":13}},{"generated":{"line":45,"column":37},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":30,"column":6}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":33,"column":5}},{"generated":{"line":46,"column":5},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":29,"column":4}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":34,"column":3}},{"generated":{"line":47,"column":3},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":28,"column":2}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":35,"column":1}},{"generated":{"line":48,"column":1},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":24}},{"generated":{"line":48,"column":2},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":27,"column":0}},{"name":"lens","generated":{"line":49,"column":18},"source":"..\\node_modules\\ramda\\es\\lens.js","original":{"line":36,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\lens.js":"import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;"},"lineCount":null}},"hash":"2d7533eabcbbea86a12829d717488317","cacheData":{"env":{}}}