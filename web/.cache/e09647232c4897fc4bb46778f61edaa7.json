{"id":"..\\node_modules\\ramda\\es\\liftN.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\liftN.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_reduce","loc":{"line":2,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\liftN.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_reduce.js"},{"name":"./ap","loc":{"line":3,"column":15},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\liftN.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\ap.js"},{"name":"./curryN","loc":{"line":4,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\liftN.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\curryN.js"},{"name":"./map","loc":{"line":5,"column":16},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\liftN.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\map.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _reduce2 = require('./internal/_reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _ap = require('./ap');\n\nvar _ap2 = _interopRequireDefault(_ap);\n\nvar _curryN = require('./curryN');\n\nvar _curryN2 = _interopRequireDefault(_curryN);\n\nvar _map = require('./map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/(0, _curry3.default)(function liftN(arity, fn) {\n  var lifted = (0, _curryN2.default)(arity, fn);\n  return (0, _curryN2.default)(arity, function () {\n    return (0, _reduce3.default)(_ap2.default, (0, _map2.default)(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexports.default = liftN;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":5,"column":0}},{"generated":{"line":29,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":7,"column":0}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":0}},{"name":"liftN","generated":{"line":46,"column":4},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":4}},{"generated":{"line":46,"column":12},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":12}},{"generated":{"line":46,"column":25},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":25}},{"generated":{"line":46,"column":46},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":33}},{"name":"liftN","generated":{"line":46,"column":55},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":42}},{"generated":{"line":46,"column":60},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":33}},{"name":"arity","generated":{"line":46,"column":61},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":48}},{"generated":{"line":46,"column":66},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":33}},{"name":"fn","generated":{"line":46,"column":68},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":55}},{"generated":{"line":46,"column":70},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":33}},{"generated":{"line":46,"column":72},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":59}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":2}},{"name":"lifted","generated":{"line":47,"column":6},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":6}},{"generated":{"line":47,"column":15},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":15}},{"name":"arity","generated":{"line":47,"column":37},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":22}},{"generated":{"line":47,"column":42},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":15}},{"name":"fn","generated":{"line":47,"column":44},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":29}},{"generated":{"line":47,"column":46},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":15}},{"generated":{"line":47,"column":47},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":25,"column":2}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":2}},{"generated":{"line":48,"column":9},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":9}},{"name":"arity","generated":{"line":48,"column":31},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":16}},{"generated":{"line":48,"column":36},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":9}},{"generated":{"line":48,"column":38},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":23}},{"generated":{"line":48,"column":50},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":35}},{"generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":4}},{"generated":{"line":49,"column":11},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":11}},{"name":"ap","generated":{"line":49,"column":33},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":19}},{"generated":{"line":49,"column":45},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":11}},{"generated":{"line":49,"column":47},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":23}},{"name":"lifted","generated":{"line":49,"column":66},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":27}},{"generated":{"line":49,"column":72},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":23}},{"name":"arguments","generated":{"line":49,"column":74},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":35}},{"generated":{"line":49,"column":84},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":45}},{"generated":{"line":49,"column":85},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":35}},{"generated":{"line":49,"column":86},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":23}},{"generated":{"line":49,"column":87},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":11}},{"name":"Array","generated":{"line":49,"column":89},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":50}},{"name":"prototype","generated":{"line":49,"column":95},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":56}},{"generated":{"line":49,"column":104},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":50}},{"name":"slice","generated":{"line":49,"column":105},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":66}},{"generated":{"line":49,"column":110},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":50}},{"name":"call","generated":{"line":49,"column":111},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":72}},{"generated":{"line":49,"column":115},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":50}},{"name":"arguments","generated":{"line":49,"column":116},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":77}},{"generated":{"line":49,"column":125},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":50}},{"generated":{"line":49,"column":127},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":88}},{"generated":{"line":49,"column":128},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":50}},{"generated":{"line":49,"column":129},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":11}},{"generated":{"line":49,"column":130},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":27,"column":4}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":28,"column":3}},{"generated":{"line":50,"column":3},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":9}},{"generated":{"line":50,"column":4},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":26,"column":2}},{"generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":29,"column":1}},{"generated":{"line":51,"column":1},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":25}},{"generated":{"line":51,"column":2},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":24,"column":0}},{"name":"liftN","generated":{"line":52,"column":18},"source":"..\\node_modules\\ramda\\es\\liftN.js","original":{"line":30,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\liftN.js":"import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;"},"lineCount":null}},"hash":"3ccb888cc906a3b322cb6cd98752cbf4","cacheData":{"env":{}}}