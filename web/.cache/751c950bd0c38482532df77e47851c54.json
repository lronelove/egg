{"id":"..\\node_modules\\ramda\\es\\adjust.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_concat","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\adjust.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_concat.js"},{"name":"./internal/_curry3","loc":{"line":2,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\adjust.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _concat2 = require('./internal/_concat');\n\nvar _concat3 = _interopRequireDefault(_concat2);\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/(0, _curry2.default)(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = (0, _concat3.default)(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexports.default = adjust;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":4,"column":0}},{"generated":{"line":42,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":0}},{"name":"adjust","generated":{"line":42,"column":4},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":4}},{"generated":{"line":42,"column":13},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":13}},{"generated":{"line":42,"column":26},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":26}},{"generated":{"line":42,"column":47},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":34}},{"name":"adjust","generated":{"line":42,"column":56},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":43}},{"generated":{"line":42,"column":62},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":34}},{"name":"fn","generated":{"line":42,"column":63},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":50}},{"generated":{"line":42,"column":65},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":34}},{"name":"idx","generated":{"line":42,"column":67},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":54}},{"generated":{"line":42,"column":70},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":34}},{"name":"list","generated":{"line":42,"column":72},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":59}},{"generated":{"line":42,"column":76},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":34}},{"generated":{"line":42,"column":78},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":65}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":2}},{"name":"idx","generated":{"line":43,"column":6},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":6}},{"name":"list","generated":{"line":43,"column":13},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":13}},{"name":"length","generated":{"line":43,"column":18},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":18}},{"generated":{"line":43,"column":24},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":6}},{"name":"idx","generated":{"line":43,"column":28},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":28}},{"generated":{"line":43,"column":34},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":34}},{"name":"list","generated":{"line":43,"column":35},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":35}},{"name":"length","generated":{"line":43,"column":40},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":40}},{"generated":{"line":43,"column":46},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":2}},{"generated":{"line":43,"column":48},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":30,"column":48}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":31,"column":4}},{"name":"list","generated":{"line":44,"column":11},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":31,"column":11}},{"generated":{"line":44,"column":15},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":31,"column":4}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":32,"column":3}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":2}},{"name":"start","generated":{"line":46,"column":6},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":6}},{"name":"idx","generated":{"line":46,"column":14},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":14}},{"generated":{"line":46,"column":20},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":20}},{"generated":{"line":46,"column":21},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":14}},{"name":"list","generated":{"line":46,"column":24},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":24}},{"name":"length","generated":{"line":46,"column":29},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":29}},{"generated":{"line":46,"column":35},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":14}},{"generated":{"line":46,"column":38},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":38}},{"generated":{"line":46,"column":39},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":33,"column":2}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":34,"column":2}},{"name":"_idx","generated":{"line":47,"column":6},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":34,"column":6}},{"name":"start","generated":{"line":47,"column":13},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":34,"column":13}},{"name":"idx","generated":{"line":47,"column":21},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":34,"column":21}},{"generated":{"line":47,"column":24},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":34,"column":2}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":35,"column":2}},{"name":"_list","generated":{"line":48,"column":6},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":35,"column":6}},{"generated":{"line":48,"column":14},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":35,"column":14}},{"name":"list","generated":{"line":48,"column":36},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":35,"column":22}},{"generated":{"line":48,"column":40},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":35,"column":14}},{"generated":{"line":48,"column":41},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":35,"column":2}},{"name":"_list","generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":2}},{"name":"_idx","generated":{"line":49,"column":8},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":8}},{"generated":{"line":49,"column":12},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":2}},{"name":"fn","generated":{"line":49,"column":16},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":16}},{"name":"list","generated":{"line":49,"column":19},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":19}},{"name":"_idx","generated":{"line":49,"column":24},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":24}},{"generated":{"line":49,"column":28},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":19}},{"generated":{"line":49,"column":29},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":16}},{"generated":{"line":49,"column":30},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":36,"column":2}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":37,"column":2}},{"name":"_list","generated":{"line":50,"column":9},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":37,"column":9}},{"generated":{"line":50,"column":14},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":37,"column":2}},{"generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":38,"column":1}},{"generated":{"line":51,"column":1},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":26}},{"generated":{"line":51,"column":2},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":29,"column":0}},{"name":"adjust","generated":{"line":52,"column":18},"source":"..\\node_modules\\ramda\\es\\adjust.js","original":{"line":39,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\adjust.js":"import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;"},"lineCount":null}},"hash":"3730c2ef1ecd7ae76bf763280af30c4f","cacheData":{"env":{}}}