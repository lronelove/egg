{"id":"..\\node_modules\\ramda\\es\\all.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\all.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_dispatchable","loc":{"line":2,"column":26},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\all.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_dispatchable.js"},{"name":"./internal/_xall","loc":{"line":3,"column":18},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\all.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_xall.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _dispatchable2 = require('./internal/_dispatchable');\n\nvar _dispatchable3 = _interopRequireDefault(_dispatchable2);\n\nvar _xall2 = require('./internal/_xall');\n\nvar _xall3 = _interopRequireDefault(_xall2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _dispatchable3.default)(['all'], _xall3.default, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexports.default = all;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":5,"column":0}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":0}},{"name":"all","generated":{"line":45,"column":4},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":4}},{"generated":{"line":45,"column":10},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":10}},{"generated":{"line":45,"column":23},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":23}},{"generated":{"line":45,"column":45},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":32}},{"generated":{"line":45,"column":58},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":45}},{"generated":{"line":45,"column":86},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":59}},{"generated":{"line":45,"column":87},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":60}},{"generated":{"line":45,"column":92},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":59}},{"generated":{"line":45,"column":93},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":45}},{"name":"_xall","generated":{"line":45,"column":95},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":68}},{"generated":{"line":45,"column":109},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":45}},{"generated":{"line":45,"column":111},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":75}},{"name":"all","generated":{"line":45,"column":120},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":84}},{"generated":{"line":45,"column":123},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":75}},{"name":"fn","generated":{"line":45,"column":124},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":88}},{"generated":{"line":45,"column":126},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":75}},{"name":"list","generated":{"line":45,"column":128},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":92}},{"generated":{"line":45,"column":132},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":75}},{"generated":{"line":45,"column":134},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":98}},{"generated":{"line":46,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":30,"column":2}},{"name":"idx","generated":{"line":46,"column":6},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":30,"column":6}},{"generated":{"line":46,"column":12},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":30,"column":12}},{"generated":{"line":46,"column":13},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":30,"column":2}},{"generated":{"line":47,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":31,"column":2}},{"name":"idx","generated":{"line":47,"column":9},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":31,"column":9}},{"name":"list","generated":{"line":47,"column":15},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":31,"column":15}},{"name":"length","generated":{"line":47,"column":20},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":31,"column":20}},{"generated":{"line":47,"column":26},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":31,"column":2}},{"generated":{"line":47,"column":28},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":31,"column":28}},{"generated":{"line":48,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":4}},{"generated":{"line":48,"column":8},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":8}},{"name":"fn","generated":{"line":48,"column":9},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":9}},{"name":"list","generated":{"line":48,"column":12},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":12}},{"name":"idx","generated":{"line":48,"column":17},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":17}},{"generated":{"line":48,"column":20},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":12}},{"generated":{"line":48,"column":21},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":9}},{"generated":{"line":48,"column":22},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":4}},{"generated":{"line":48,"column":24},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":32,"column":24}},{"generated":{"line":49,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":33,"column":6}},{"generated":{"line":49,"column":13},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":33,"column":13}},{"generated":{"line":49,"column":18},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":33,"column":6}},{"generated":{"line":50,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":34,"column":5}},{"name":"idx","generated":{"line":51,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":35,"column":4}},{"generated":{"line":51,"column":11},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":35,"column":11}},{"generated":{"line":51,"column":12},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":35,"column":4}},{"generated":{"line":52,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":36,"column":3}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":37,"column":2}},{"generated":{"line":53,"column":9},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":37,"column":9}},{"generated":{"line":53,"column":13},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":37,"column":2}},{"generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":38,"column":1}},{"generated":{"line":54,"column":1},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":45}},{"generated":{"line":54,"column":2},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":23}},{"generated":{"line":54,"column":3},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":29,"column":0}},{"name":"all","generated":{"line":55,"column":18},"source":"..\\node_modules\\ramda\\es\\all.js","original":{"line":39,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\all.js":"import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;"},"lineCount":null}},"hash":"db5505e1bb8766a8c33162bc428424df","cacheData":{"env":{}}}