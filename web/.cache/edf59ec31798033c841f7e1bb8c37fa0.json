{"id":"..\\node_modules\\ramda\\es\\isEmpty.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry1","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\isEmpty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry1.js"},{"name":"./empty","loc":{"line":2,"column":18},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\isEmpty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\empty.js"},{"name":"./equals","loc":{"line":3,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\isEmpty.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\equals.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry1');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nvar _empty = require('./empty');\n\nvar _empty2 = _interopRequireDefault(_empty);\n\nvar _equals = require('./equals');\n\nvar _equals2 = _interopRequireDefault(_equals);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/(0, _curry2.default)(function isEmpty(x) {\n  return x != null && (0, _equals2.default)(x, (0, _empty2.default)(x));\n});\nexports.default = isEmpty;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":5,"column":0}},{"generated":{"line":42,"column":0},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":0}},{"name":"isEmpty","generated":{"line":42,"column":4},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":4}},{"generated":{"line":42,"column":14},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":14}},{"generated":{"line":42,"column":27},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":27}},{"generated":{"line":42,"column":48},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":35}},{"name":"isEmpty","generated":{"line":42,"column":57},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":44}},{"generated":{"line":42,"column":64},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":35}},{"name":"x","generated":{"line":42,"column":65},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":52}},{"generated":{"line":42,"column":66},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":35}},{"generated":{"line":42,"column":68},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":55}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":2}},{"name":"x","generated":{"line":43,"column":9},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":9}},{"generated":{"line":43,"column":14},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":14}},{"generated":{"line":43,"column":18},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":9}},{"generated":{"line":43,"column":22},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":22}},{"name":"x","generated":{"line":43,"column":44},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":29}},{"generated":{"line":43,"column":45},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":22}},{"generated":{"line":43,"column":47},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":32}},{"name":"x","generated":{"line":43,"column":68},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":38}},{"generated":{"line":43,"column":69},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":32}},{"generated":{"line":43,"column":70},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":22}},{"generated":{"line":43,"column":71},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":27,"column":2}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":28,"column":1}},{"generated":{"line":44,"column":1},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":27}},{"generated":{"line":44,"column":2},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":26,"column":0}},{"name":"isEmpty","generated":{"line":45,"column":18},"source":"..\\node_modules\\ramda\\es\\isEmpty.js","original":{"line":29,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\isEmpty.js":"import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;"},"lineCount":null}},"hash":"52b41f665059fdffa07ade29c2f9285a","cacheData":{"env":{}}}