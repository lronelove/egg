{"id":"..\\node_modules\\ramda\\es\\partialRight.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_concat","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\partialRight.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_concat.js"},{"name":"./internal/_createPartialApplicator","loc":{"line":2,"column":37},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\partialRight.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_createPartialApplicator.js"},{"name":"./flip","loc":{"line":3,"column":17},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\partialRight.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\flip.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _concat2 = require('./internal/_concat');\n\nvar _concat3 = _interopRequireDefault(_concat2);\n\nvar _createPartialApplicator2 = require('./internal/_createPartialApplicator');\n\nvar _createPartialApplicator3 = _interopRequireDefault(_createPartialApplicator2);\n\nvar _flip = require('./flip');\n\nvar _flip2 = _interopRequireDefault(_flip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/(0, _createPartialApplicator3.default)( /*#__PURE__*/(0, _flip2.default)(_concat3.default));\nexports.default = partialRight;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":5,"column":0}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":0}},{"name":"partialRight","generated":{"line":45,"column":4},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":4}},{"generated":{"line":45,"column":19},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":19}},{"generated":{"line":45,"column":32},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":32}},{"generated":{"line":45,"column":72},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":58}},{"generated":{"line":45,"column":85},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":71}},{"name":"_concat","generated":{"line":45,"column":105},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":76}},{"generated":{"line":45,"column":121},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":71}},{"generated":{"line":45,"column":122},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":32}},{"generated":{"line":45,"column":123},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":29,"column":0}},{"name":"partialRight","generated":{"line":46,"column":18},"source":"..\\node_modules\\ramda\\es\\partialRight.js","original":{"line":30,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\partialRight.js":"import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;"},"lineCount":null}},"hash":"3a3f7d2630e13b1ecc009b84aa565949","cacheData":{"env":{}}}