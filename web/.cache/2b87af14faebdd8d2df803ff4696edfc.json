{"id":"..\\node_modules\\ramda\\es\\propSatisfies.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\propSatisfies.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/(0, _curry2.default)(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexports.default = propSatisfies;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":0}},{"name":"propSatisfies","generated":{"line":32,"column":4},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":4}},{"generated":{"line":32,"column":20},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":20}},{"generated":{"line":32,"column":33},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":33}},{"generated":{"line":32,"column":54},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":41}},{"name":"propSatisfies","generated":{"line":32,"column":63},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":50}},{"generated":{"line":32,"column":76},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":41}},{"name":"pred","generated":{"line":32,"column":77},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":64}},{"generated":{"line":32,"column":81},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":41}},{"name":"name","generated":{"line":32,"column":83},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":70}},{"generated":{"line":32,"column":87},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":41}},{"name":"obj","generated":{"line":32,"column":89},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":76}},{"generated":{"line":32,"column":92},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":41}},{"generated":{"line":32,"column":94},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":81}},{"generated":{"line":33,"column":0},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":23,"column":2}},{"name":"pred","generated":{"line":33,"column":9},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":23,"column":9}},{"name":"obj","generated":{"line":33,"column":14},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":23,"column":14}},{"name":"name","generated":{"line":33,"column":18},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":23,"column":18}},{"generated":{"line":33,"column":22},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":23,"column":14}},{"generated":{"line":33,"column":23},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":23,"column":9}},{"generated":{"line":33,"column":24},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":23,"column":2}},{"generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":24,"column":1}},{"generated":{"line":34,"column":1},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":33}},{"generated":{"line":34,"column":2},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":22,"column":0}},{"name":"propSatisfies","generated":{"line":35,"column":18},"source":"..\\node_modules\\ramda\\es\\propSatisfies.js","original":{"line":25,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\propSatisfies.js":"import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;"},"lineCount":null}},"hash":"461b46e2ea7a5851c27bd6b41a3d0062","cacheData":{"env":{}}}