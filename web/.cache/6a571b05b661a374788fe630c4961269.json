{"id":"..\\node_modules\\ramda\\es\\remove.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\remove.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/(0, _curry2.default)(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexports.default = remove;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":0}},{"name":"remove","generated":{"line":32,"column":4},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":4}},{"generated":{"line":32,"column":13},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":13}},{"generated":{"line":32,"column":26},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":26}},{"generated":{"line":32,"column":47},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":34}},{"name":"remove","generated":{"line":32,"column":56},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":43}},{"generated":{"line":32,"column":62},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":34}},{"name":"start","generated":{"line":32,"column":63},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":50}},{"generated":{"line":32,"column":68},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":34}},{"name":"count","generated":{"line":32,"column":70},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":57}},{"generated":{"line":32,"column":75},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":34}},{"name":"list","generated":{"line":32,"column":77},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":64}},{"generated":{"line":32,"column":81},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":34}},{"generated":{"line":32,"column":83},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":70}},{"generated":{"line":33,"column":0},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":2}},{"name":"result","generated":{"line":33,"column":6},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":6}},{"name":"Array","generated":{"line":33,"column":15},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":15}},{"name":"prototype","generated":{"line":33,"column":21},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":21}},{"generated":{"line":33,"column":30},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":15}},{"name":"slice","generated":{"line":33,"column":31},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":31}},{"generated":{"line":33,"column":36},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":15}},{"name":"call","generated":{"line":33,"column":37},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":37}},{"generated":{"line":33,"column":41},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":15}},{"name":"list","generated":{"line":33,"column":42},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":42}},{"generated":{"line":33,"column":46},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":15}},{"generated":{"line":33,"column":48},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":48}},{"generated":{"line":33,"column":49},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":15}},{"generated":{"line":33,"column":50},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":23,"column":2}},{"name":"result","generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":24,"column":2}},{"name":"splice","generated":{"line":34,"column":9},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":24,"column":9}},{"generated":{"line":34,"column":15},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":24,"column":2}},{"name":"start","generated":{"line":34,"column":16},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":24,"column":16}},{"generated":{"line":34,"column":21},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":24,"column":2}},{"name":"count","generated":{"line":34,"column":23},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":24,"column":23}},{"generated":{"line":34,"column":28},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":24,"column":2}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":25,"column":2}},{"name":"result","generated":{"line":35,"column":9},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":15},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":25,"column":2}},{"generated":{"line":36,"column":0},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":26,"column":1}},{"generated":{"line":36,"column":1},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":26}},{"generated":{"line":36,"column":2},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":22,"column":0}},{"name":"remove","generated":{"line":37,"column":18},"source":"..\\node_modules\\ramda\\es\\remove.js","original":{"line":27,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\remove.js":"import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;"},"lineCount":null}},"hash":"dfe0e9a7d058911fc078fb1dc1b21e76","cacheData":{"env":{}}}