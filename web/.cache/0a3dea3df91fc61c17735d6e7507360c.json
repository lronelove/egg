{"id":"..\\node_modules\\ramda\\es\\replace.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\replace.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/(0, _curry2.default)(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexports.default = replace;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":0},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":0}},{"name":"replace","generated":{"line":33,"column":4},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":4}},{"generated":{"line":33,"column":14},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":14}},{"generated":{"line":33,"column":27},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":27}},{"generated":{"line":33,"column":48},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":35}},{"name":"replace","generated":{"line":33,"column":57},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":44}},{"generated":{"line":33,"column":64},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":35}},{"name":"regex","generated":{"line":33,"column":65},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":52}},{"generated":{"line":33,"column":70},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":35}},{"name":"replacement","generated":{"line":33,"column":72},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":59}},{"generated":{"line":33,"column":83},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":35}},{"name":"str","generated":{"line":33,"column":85},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":72}},{"generated":{"line":33,"column":88},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":35}},{"generated":{"line":33,"column":90},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":77}},{"generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":2}},{"name":"str","generated":{"line":34,"column":9},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":9}},{"name":"replace","generated":{"line":34,"column":13},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":13}},{"generated":{"line":34,"column":20},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":9}},{"name":"regex","generated":{"line":34,"column":21},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":21}},{"generated":{"line":34,"column":26},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":9}},{"name":"replacement","generated":{"line":34,"column":28},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":28}},{"generated":{"line":34,"column":39},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":9}},{"generated":{"line":34,"column":40},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":24,"column":2}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":25,"column":1}},{"generated":{"line":35,"column":1},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":27}},{"generated":{"line":35,"column":2},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":23,"column":0}},{"name":"replace","generated":{"line":36,"column":18},"source":"..\\node_modules\\ramda\\es\\replace.js","original":{"line":26,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\replace.js":"import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;"},"lineCount":null}},"hash":"317abfd6afdaa0393829352a98696ba6","cacheData":{"env":{}}}