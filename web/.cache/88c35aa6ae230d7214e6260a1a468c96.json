{"id":"..\\node_modules\\ramda\\es\\converge.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_map","loc":{"line":2,"column":17},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_map.js"},{"name":"./curryN","loc":{"line":3,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\curryN.js"},{"name":"./max","loc":{"line":4,"column":16},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\max.js"},{"name":"./pluck","loc":{"line":5,"column":18},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\pluck.js"},{"name":"./reduce","loc":{"line":6,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\converge.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\reduce.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _map2 = require('./internal/_map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _curryN = require('./curryN');\n\nvar _curryN2 = _interopRequireDefault(_curryN);\n\nvar _max = require('./max');\n\nvar _max2 = _interopRequireDefault(_max);\n\nvar _pluck = require('./pluck');\n\nvar _pluck2 = _interopRequireDefault(_pluck);\n\nvar _reduce = require('./reduce');\n\nvar _reduce2 = _interopRequireDefault(_reduce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/(0, _curry3.default)(function converge(after, fns) {\n  return (0, _curryN2.default)((0, _reduce2.default)(_max2.default, 0, (0, _pluck2.default)('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, (0, _map3.default)(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexports.default = converge;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":5,"column":0}},{"generated":{"line":27,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":6,"column":0}},{"generated":{"line":33,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":8,"column":0}},{"generated":{"line":60,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":0}},{"name":"converge","generated":{"line":60,"column":4},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":4}},{"generated":{"line":60,"column":15},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":15}},{"generated":{"line":60,"column":28},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":28}},{"generated":{"line":60,"column":49},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":36}},{"name":"converge","generated":{"line":60,"column":58},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":45}},{"generated":{"line":60,"column":66},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":36}},{"name":"after","generated":{"line":60,"column":67},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":54}},{"generated":{"line":60,"column":72},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":36}},{"name":"fns","generated":{"line":60,"column":74},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":61}},{"generated":{"line":60,"column":77},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":36}},{"generated":{"line":60,"column":79},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":66}},{"generated":{"line":61,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":2}},{"generated":{"line":61,"column":9},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":9}},{"generated":{"line":61,"column":31},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":16}},{"name":"max","generated":{"line":61,"column":53},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":23}},{"generated":{"line":61,"column":66},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":16}},{"generated":{"line":61,"column":68},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":28}},{"generated":{"line":61,"column":69},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":16}},{"generated":{"line":61,"column":71},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":31}},{"generated":{"line":61,"column":92},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":37}},{"generated":{"line":61,"column":100},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":31}},{"name":"fns","generated":{"line":61,"column":102},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":47}},{"generated":{"line":61,"column":105},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":31}},{"generated":{"line":61,"column":106},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":16}},{"generated":{"line":61,"column":107},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":9}},{"generated":{"line":61,"column":109},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":54}},{"generated":{"line":61,"column":121},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":66}},{"generated":{"line":62,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":37,"column":4}},{"name":"args","generated":{"line":62,"column":8},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":37,"column":8}},{"name":"arguments","generated":{"line":62,"column":15},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":37,"column":15}},{"generated":{"line":62,"column":24},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":37,"column":4}},{"generated":{"line":63,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":38,"column":4}},{"name":"context","generated":{"line":63,"column":8},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":38,"column":8}},{"generated":{"line":63,"column":18},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":38,"column":18}},{"generated":{"line":63,"column":22},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":38,"column":4}},{"generated":{"line":64,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":4}},{"name":"after","generated":{"line":64,"column":11},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":11}},{"name":"apply","generated":{"line":64,"column":17},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":17}},{"generated":{"line":64,"column":22},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":11}},{"name":"context","generated":{"line":64,"column":23},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":23}},{"generated":{"line":64,"column":30},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":11}},{"generated":{"line":64,"column":32},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":32}},{"generated":{"line":64,"column":51},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":37}},{"name":"fn","generated":{"line":64,"column":61},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":47}},{"generated":{"line":64,"column":63},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":37}},{"generated":{"line":64,"column":65},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":51}},{"generated":{"line":65,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":6}},{"name":"fn","generated":{"line":65,"column":13},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":13}},{"name":"apply","generated":{"line":65,"column":16},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":16}},{"generated":{"line":65,"column":21},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":13}},{"name":"context","generated":{"line":65,"column":22},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":22}},{"generated":{"line":65,"column":29},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":13}},{"name":"args","generated":{"line":65,"column":31},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":31}},{"generated":{"line":65,"column":35},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":13}},{"generated":{"line":65,"column":36},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":40,"column":6}},{"generated":{"line":66,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":41,"column":5}},{"generated":{"line":66,"column":5},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":32}},{"name":"fns","generated":{"line":66,"column":7},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":41,"column":7}},{"generated":{"line":66,"column":10},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":32}},{"generated":{"line":66,"column":11},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":11}},{"generated":{"line":66,"column":12},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":39,"column":4}},{"generated":{"line":67,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":42,"column":3}},{"generated":{"line":67,"column":3},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":9}},{"generated":{"line":67,"column":4},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":36,"column":2}},{"generated":{"line":68,"column":0},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":43,"column":1}},{"generated":{"line":68,"column":1},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":28}},{"generated":{"line":68,"column":2},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":35,"column":0}},{"name":"converge","generated":{"line":69,"column":18},"source":"..\\node_modules\\ramda\\es\\converge.js","original":{"line":44,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\converge.js":"import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;"},"lineCount":null}},"hash":"3cf267b593407a17947145cc226cccc5","cacheData":{"env":{}}}