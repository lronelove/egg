{"id":"..\\node_modules\\ramda\\es\\descend.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\descend.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/(0, _curry2.default)(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexports.default = descend;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":3,"column":0}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":0}},{"name":"descend","generated":{"line":35,"column":4},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":4}},{"generated":{"line":35,"column":14},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":14}},{"generated":{"line":35,"column":27},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":27}},{"generated":{"line":35,"column":48},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":35}},{"name":"descend","generated":{"line":35,"column":57},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":44}},{"generated":{"line":35,"column":64},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":35}},{"name":"fn","generated":{"line":35,"column":65},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":52}},{"generated":{"line":35,"column":67},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":35}},{"name":"a","generated":{"line":35,"column":69},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":56}},{"generated":{"line":35,"column":70},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":35}},{"name":"b","generated":{"line":35,"column":72},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":59}},{"generated":{"line":35,"column":73},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":35}},{"generated":{"line":35,"column":75},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":62}},{"generated":{"line":36,"column":0},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":26,"column":2}},{"name":"aa","generated":{"line":36,"column":6},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":26,"column":6}},{"name":"fn","generated":{"line":36,"column":11},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":26,"column":11}},{"name":"a","generated":{"line":36,"column":14},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":26,"column":14}},{"generated":{"line":36,"column":15},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":26,"column":11}},{"generated":{"line":36,"column":16},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":26,"column":2}},{"generated":{"line":37,"column":0},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":27,"column":2}},{"name":"bb","generated":{"line":37,"column":6},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":27,"column":6}},{"name":"fn","generated":{"line":37,"column":11},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":27,"column":11}},{"name":"b","generated":{"line":37,"column":14},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":27,"column":14}},{"generated":{"line":37,"column":15},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":27,"column":11}},{"generated":{"line":37,"column":16},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":27,"column":2}},{"generated":{"line":38,"column":0},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":2}},{"name":"aa","generated":{"line":38,"column":9},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":9}},{"name":"bb","generated":{"line":38,"column":14},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":14}},{"generated":{"line":38,"column":16},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":9}},{"generated":{"line":38,"column":19},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":19}},{"generated":{"line":38,"column":20},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":20}},{"generated":{"line":38,"column":21},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":9}},{"name":"aa","generated":{"line":38,"column":24},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":24}},{"name":"bb","generated":{"line":38,"column":29},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":29}},{"generated":{"line":38,"column":31},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":24}},{"generated":{"line":38,"column":34},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":34}},{"generated":{"line":38,"column":35},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":24}},{"generated":{"line":38,"column":38},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":38}},{"generated":{"line":38,"column":39},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":28,"column":2}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":29,"column":1}},{"generated":{"line":39,"column":1},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":27}},{"generated":{"line":39,"column":2},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":25,"column":0}},{"name":"descend","generated":{"line":40,"column":18},"source":"..\\node_modules\\ramda\\es\\descend.js","original":{"line":30,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\descend.js":"import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;"},"lineCount":null}},"hash":"c1aace4134760d385f74474434489df5","cacheData":{"env":{}}}