{"id":"..\\node_modules\\ramda\\es\\take.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\take.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_dispatchable","loc":{"line":2,"column":26},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\take.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_dispatchable.js"},{"name":"./internal/_xtake","loc":{"line":3,"column":19},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\take.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_xtake.js"},{"name":"./slice","loc":{"line":4,"column":18},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\take.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\slice.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _dispatchable2 = require('./internal/_dispatchable');\n\nvar _dispatchable3 = _interopRequireDefault(_dispatchable2);\n\nvar _xtake2 = require('./internal/_xtake');\n\nvar _xtake3 = _interopRequireDefault(_xtake2);\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _dispatchable3.default)(['take'], _xtake3.default, function take(n, xs) {\n  return (0, _slice2.default)(0, n < 0 ? Infinity : n, xs);\n}));\nexports.default = take;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":6,"column":0}},{"generated":{"line":68,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":0}},{"name":"take","generated":{"line":68,"column":4},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":4}},{"generated":{"line":68,"column":11},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":11}},{"generated":{"line":68,"column":24},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":24}},{"generated":{"line":68,"column":46},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":33}},{"generated":{"line":68,"column":59},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":46}},{"generated":{"line":68,"column":87},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":60}},{"generated":{"line":68,"column":88},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":61}},{"generated":{"line":68,"column":94},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":60}},{"generated":{"line":68,"column":95},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":46}},{"name":"_xtake","generated":{"line":68,"column":97},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":70}},{"generated":{"line":68,"column":112},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":46}},{"generated":{"line":68,"column":114},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":78}},{"name":"take","generated":{"line":68,"column":123},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":87}},{"generated":{"line":68,"column":127},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":78}},{"name":"n","generated":{"line":68,"column":128},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":92}},{"generated":{"line":68,"column":129},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":78}},{"name":"xs","generated":{"line":68,"column":131},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":95}},{"generated":{"line":68,"column":133},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":78}},{"generated":{"line":68,"column":135},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":99}},{"generated":{"line":69,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":2}},{"generated":{"line":69,"column":9},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":9}},{"generated":{"line":69,"column":30},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":15}},{"generated":{"line":69,"column":31},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":9}},{"name":"n","generated":{"line":69,"column":33},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":18}},{"generated":{"line":69,"column":37},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":22}},{"generated":{"line":69,"column":38},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":18}},{"name":"Infinity","generated":{"line":69,"column":41},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":26}},{"generated":{"line":69,"column":49},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":18}},{"name":"n","generated":{"line":69,"column":52},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":37}},{"generated":{"line":69,"column":53},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":9}},{"name":"xs","generated":{"line":69,"column":55},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":40}},{"generated":{"line":69,"column":57},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":9}},{"generated":{"line":69,"column":58},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":50,"column":2}},{"generated":{"line":70,"column":0},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":51,"column":1}},{"generated":{"line":70,"column":1},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":46}},{"generated":{"line":70,"column":2},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":24}},{"generated":{"line":70,"column":3},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":49,"column":0}},{"name":"take","generated":{"line":71,"column":18},"source":"..\\node_modules\\ramda\\es\\take.js","original":{"line":52,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\take.js":"import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;"},"lineCount":null}},"hash":"eb51303f402687c772f87769fdc97ba6","cacheData":{"env":{}}}