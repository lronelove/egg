{"id":"..\\node_modules\\ramda\\es\\insert.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\insert.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/(0, _curry2.default)(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexports.default = insert;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":0}},{"name":"insert","generated":{"line":32,"column":4},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":4}},{"generated":{"line":32,"column":13},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":13}},{"generated":{"line":32,"column":26},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":26}},{"generated":{"line":32,"column":47},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":34}},{"name":"insert","generated":{"line":32,"column":56},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":43}},{"generated":{"line":32,"column":62},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":34}},{"name":"idx","generated":{"line":32,"column":63},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":50}},{"generated":{"line":32,"column":66},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":34}},{"name":"elt","generated":{"line":32,"column":68},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":55}},{"generated":{"line":32,"column":71},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":34}},{"name":"list","generated":{"line":32,"column":73},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":60}},{"generated":{"line":32,"column":77},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":34}},{"generated":{"line":32,"column":79},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":66}},{"name":"idx","generated":{"line":33,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":2}},{"name":"idx","generated":{"line":33,"column":8},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":8}},{"name":"list","generated":{"line":33,"column":14},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":14}},{"name":"length","generated":{"line":33,"column":19},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":19}},{"generated":{"line":33,"column":25},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":8}},{"name":"idx","generated":{"line":33,"column":29},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":29}},{"generated":{"line":33,"column":36},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":36}},{"generated":{"line":33,"column":37},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":8}},{"name":"idx","generated":{"line":33,"column":40},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":40}},{"generated":{"line":33,"column":43},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":8}},{"name":"list","generated":{"line":33,"column":46},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":46}},{"name":"length","generated":{"line":33,"column":51},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":51}},{"generated":{"line":33,"column":57},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":23,"column":2}},{"generated":{"line":34,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":2}},{"name":"result","generated":{"line":34,"column":6},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":6}},{"name":"Array","generated":{"line":34,"column":15},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":15}},{"name":"prototype","generated":{"line":34,"column":21},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":21}},{"generated":{"line":34,"column":30},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":15}},{"name":"slice","generated":{"line":34,"column":31},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":31}},{"generated":{"line":34,"column":36},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":15}},{"name":"call","generated":{"line":34,"column":37},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":37}},{"generated":{"line":34,"column":41},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":15}},{"name":"list","generated":{"line":34,"column":42},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":42}},{"generated":{"line":34,"column":46},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":15}},{"generated":{"line":34,"column":48},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":48}},{"generated":{"line":34,"column":49},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":15}},{"generated":{"line":34,"column":50},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":24,"column":2}},{"name":"result","generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":2}},{"name":"splice","generated":{"line":35,"column":9},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":15},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":2}},{"name":"idx","generated":{"line":35,"column":16},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":16}},{"generated":{"line":35,"column":19},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":2}},{"generated":{"line":35,"column":21},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":21}},{"generated":{"line":35,"column":22},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":2}},{"name":"elt","generated":{"line":35,"column":24},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":24}},{"generated":{"line":35,"column":27},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":25,"column":2}},{"generated":{"line":36,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":26,"column":2}},{"name":"result","generated":{"line":36,"column":9},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":26,"column":9}},{"generated":{"line":36,"column":15},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":26,"column":2}},{"generated":{"line":37,"column":0},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":27,"column":1}},{"generated":{"line":37,"column":1},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":26}},{"generated":{"line":37,"column":2},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":22,"column":0}},{"name":"insert","generated":{"line":38,"column":18},"source":"..\\node_modules\\ramda\\es\\insert.js","original":{"line":28,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\insert.js":"import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;"},"lineCount":null}},"hash":"397005f0159e4b75a3457afceac36305","cacheData":{"env":{}}}