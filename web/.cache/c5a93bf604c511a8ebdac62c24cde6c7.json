{"id":"..\\node_modules\\ramda\\es\\groupBy.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_checkForMethod","loc":{"line":1,"column":28},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\groupBy.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_checkForMethod.js"},{"name":"./internal/_curry2","loc":{"line":2,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\groupBy.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./reduceBy","loc":{"line":3,"column":21},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\groupBy.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\reduceBy.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _checkForMethod2 = require('./internal/_checkForMethod');\n\nvar _checkForMethod3 = _interopRequireDefault(_checkForMethod2);\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _reduceBy = require('./reduceBy');\n\nvar _reduceBy2 = _interopRequireDefault(_reduceBy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _checkForMethod3.default)('groupBy', /*#__PURE__*/(0, _reduceBy2.default)(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexports.default = groupBy;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":5,"column":0}},{"generated":{"line":61,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":0}},{"name":"groupBy","generated":{"line":61,"column":4},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":4}},{"generated":{"line":61,"column":14},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":14}},{"generated":{"line":61,"column":27},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":27}},{"generated":{"line":61,"column":49},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":36}},{"generated":{"line":61,"column":62},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":49}},{"generated":{"line":61,"column":92},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":65}},{"generated":{"line":61,"column":101},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":49}},{"generated":{"line":61,"column":103},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":76}},{"generated":{"line":61,"column":116},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":89}},{"generated":{"line":61,"column":140},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":98}},{"name":"acc","generated":{"line":61,"column":150},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":108}},{"generated":{"line":61,"column":153},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":98}},{"name":"item","generated":{"line":61,"column":155},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":113}},{"generated":{"line":61,"column":159},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":98}},{"generated":{"line":61,"column":161},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":119}},{"generated":{"line":62,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":46,"column":2}},{"name":"acc","generated":{"line":62,"column":6},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":46,"column":6}},{"generated":{"line":62,"column":13},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":46,"column":13}},{"generated":{"line":62,"column":17},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":46,"column":2}},{"generated":{"line":62,"column":19},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":46,"column":19}},{"name":"acc","generated":{"line":63,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":47,"column":4}},{"generated":{"line":63,"column":10},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":47,"column":10}},{"generated":{"line":63,"column":12},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":47,"column":4}},{"generated":{"line":64,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":48,"column":3}},{"name":"acc","generated":{"line":65,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":49,"column":2}},{"name":"push","generated":{"line":65,"column":6},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":49,"column":6}},{"generated":{"line":65,"column":10},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":49,"column":2}},{"name":"item","generated":{"line":65,"column":11},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":49,"column":11}},{"generated":{"line":65,"column":15},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":49,"column":2}},{"generated":{"line":66,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":50,"column":2}},{"name":"acc","generated":{"line":66,"column":9},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":50,"column":9}},{"generated":{"line":66,"column":12},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":50,"column":2}},{"generated":{"line":67,"column":0},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":51,"column":1}},{"generated":{"line":67,"column":1},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":89}},{"generated":{"line":67,"column":3},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":51,"column":3}},{"generated":{"line":67,"column":7},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":89}},{"generated":{"line":67,"column":8},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":49}},{"generated":{"line":67,"column":9},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":27}},{"generated":{"line":67,"column":10},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":45,"column":0}},{"name":"groupBy","generated":{"line":68,"column":18},"source":"..\\node_modules\\ramda\\es\\groupBy.js","original":{"line":52,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\groupBy.js":"import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;"},"lineCount":null}},"hash":"727e6a9b777c598f5127369a857f4ea2","cacheData":{"env":{}}}