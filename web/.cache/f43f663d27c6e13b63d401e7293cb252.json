{"id":"..\\node_modules\\ramda\\es\\view.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\view.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/(0, _curry3.default)(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexports.default = view;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":4,"column":0}},{"name":"Const","generated":{"line":14,"column":4},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":4,"column":4}},{"generated":{"line":14,"column":12},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":4,"column":12}},{"name":"x","generated":{"line":14,"column":22},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":4,"column":22}},{"generated":{"line":14,"column":23},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":4,"column":12}},{"generated":{"line":14,"column":25},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":4,"column":25}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":2}},{"generated":{"line":15,"column":9},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":9}},{"name":"value","generated":{"line":15,"column":11},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":11}},{"name":"x","generated":{"line":15,"column":18},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":18}},{"generated":{"line":15,"column":19},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":9}},{"generated":{"line":15,"column":21},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":21}},{"generated":{"line":15,"column":41},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":41}},{"generated":{"line":15,"column":53},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":53}},{"generated":{"line":16,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":6,"column":6}},{"generated":{"line":16,"column":13},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":6,"column":13}},{"generated":{"line":16,"column":17},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":6,"column":6}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":7,"column":5}},{"generated":{"line":17,"column":5},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":9}},{"generated":{"line":17,"column":7},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":5,"column":2}},{"generated":{"line":18,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":8,"column":1}},{"generated":{"line":18,"column":1},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":4,"column":0}},{"generated":{"line":20,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":10,"column":0}},{"generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":0}},{"name":"view","generated":{"line":41,"column":4},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":4}},{"generated":{"line":41,"column":11},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":11}},{"generated":{"line":41,"column":24},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":24}},{"generated":{"line":41,"column":45},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":32}},{"name":"view","generated":{"line":41,"column":54},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":41}},{"generated":{"line":41,"column":58},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":32}},{"name":"lens","generated":{"line":41,"column":59},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":46}},{"generated":{"line":41,"column":63},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":32}},{"name":"x","generated":{"line":41,"column":65},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":52}},{"generated":{"line":41,"column":66},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":32}},{"generated":{"line":41,"column":68},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":55}},{"generated":{"line":42,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":32,"column":2}},{"generated":{"line":43,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":33,"column":2}},{"generated":{"line":44,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":2}},{"name":"lens","generated":{"line":44,"column":9},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":9}},{"name":"Const","generated":{"line":44,"column":14},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":14}},{"generated":{"line":44,"column":19},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":9}},{"name":"x","generated":{"line":44,"column":21},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":21}},{"generated":{"line":44,"column":22},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":9}},{"name":"value","generated":{"line":44,"column":24},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":24}},{"generated":{"line":44,"column":29},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":34,"column":2}},{"generated":{"line":45,"column":0},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":35,"column":1}},{"generated":{"line":45,"column":1},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":24}},{"generated":{"line":45,"column":2},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":31,"column":0}},{"name":"view","generated":{"line":46,"column":18},"source":"..\\node_modules\\ramda\\es\\view.js","original":{"line":36,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\view.js":"import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;"},"lineCount":null}},"hash":"7aa2cc0476ed6801ff8c4076c2835753","cacheData":{"env":{}}}