{"id":"..\\node_modules\\ramda\\es\\splitAt.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\splitAt.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./length","loc":{"line":2,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\splitAt.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\length.js"},{"name":"./slice","loc":{"line":3,"column":18},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\splitAt.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\slice.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _length = require('./length');\n\nvar _length2 = _interopRequireDefault(_length);\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/(0, _curry3.default)(function splitAt(index, array) {\n  return [(0, _slice2.default)(0, index, array), (0, _slice2.default)(index, (0, _length2.default)(array), array)];\n});\nexports.default = splitAt;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":5,"column":0}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":0}},{"name":"splitAt","generated":{"line":39,"column":4},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":4}},{"generated":{"line":39,"column":14},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":14}},{"generated":{"line":39,"column":27},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":27}},{"generated":{"line":39,"column":48},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":35}},{"name":"splitAt","generated":{"line":39,"column":57},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":44}},{"generated":{"line":39,"column":64},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":35}},{"name":"index","generated":{"line":39,"column":65},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":52}},{"generated":{"line":39,"column":70},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":35}},{"name":"array","generated":{"line":39,"column":72},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":59}},{"generated":{"line":39,"column":77},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":35}},{"generated":{"line":39,"column":79},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":66}},{"generated":{"line":40,"column":0},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":2}},{"generated":{"line":40,"column":9},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":9}},{"generated":{"line":40,"column":10},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":10}},{"generated":{"line":40,"column":31},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":16}},{"generated":{"line":40,"column":32},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":10}},{"name":"index","generated":{"line":40,"column":34},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":19}},{"generated":{"line":40,"column":39},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":10}},{"name":"array","generated":{"line":40,"column":41},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":26}},{"generated":{"line":40,"column":46},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":10}},{"generated":{"line":40,"column":47},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":9}},{"generated":{"line":40,"column":49},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":34}},{"name":"index","generated":{"line":40,"column":70},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":40}},{"generated":{"line":40,"column":75},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":34}},{"generated":{"line":40,"column":77},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":47}},{"name":"array","generated":{"line":40,"column":99},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":54}},{"generated":{"line":40,"column":104},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":47}},{"generated":{"line":40,"column":105},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":34}},{"name":"array","generated":{"line":40,"column":107},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":62}},{"generated":{"line":40,"column":112},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":34}},{"generated":{"line":40,"column":113},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":9}},{"generated":{"line":40,"column":114},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":24,"column":2}},{"generated":{"line":41,"column":0},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":25,"column":1}},{"generated":{"line":41,"column":1},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":27}},{"generated":{"line":41,"column":2},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":23,"column":0}},{"name":"splitAt","generated":{"line":42,"column":18},"source":"..\\node_modules\\ramda\\es\\splitAt.js","original":{"line":26,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\splitAt.js":"import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;"},"lineCount":null}},"hash":"a01973d90659ca767df35f1f9df3c1d5","cacheData":{"env":{}}}