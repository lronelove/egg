{"id":"..\\node_modules\\ramda\\es\\complement.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538215285456},{"name":"./lift","loc":{"line":1,"column":17},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\complement.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\lift.js"},{"name":"./not","loc":{"line":2,"column":16},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\complement.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\not.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lift = require('./lift');\n\nvar _lift2 = _interopRequireDefault(_lift);\n\nvar _not = require('./not');\n\nvar _not2 = _interopRequireDefault(_not);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/(0, _lift2.default)(_not2.default);\nexports.default = complement;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":4,"column":0}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":26,"column":0}},{"name":"complement","generated":{"line":39,"column":4},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":26,"column":4}},{"generated":{"line":39,"column":17},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":26,"column":17}},{"generated":{"line":39,"column":30},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":26,"column":30}},{"name":"not","generated":{"line":39,"column":50},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":26,"column":35}},{"generated":{"line":39,"column":63},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":26,"column":30}},{"generated":{"line":39,"column":64},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":26,"column":0}},{"name":"complement","generated":{"line":40,"column":18},"source":"..\\node_modules\\ramda\\es\\complement.js","original":{"line":27,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\complement.js":"import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;"},"lineCount":null}},"hash":"fdce3845e2956b969d4ad60992bd4579","cacheData":{"env":{}}}