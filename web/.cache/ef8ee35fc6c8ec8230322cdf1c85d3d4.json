{"id":"..\\node_modules\\ramda\\es\\sum.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./add","loc":{"line":1,"column":16},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\sum.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\add.js"},{"name":"./reduce","loc":{"line":2,"column":19},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\sum.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\reduce.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _add = require('./add');\n\nvar _add2 = _interopRequireDefault(_add);\n\nvar _reduce = require('./reduce');\n\nvar _reduce2 = _interopRequireDefault(_reduce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/(0, _reduce2.default)(_add2.default, 0);\nexports.default = sum;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":4,"column":0}},{"generated":{"line":32,"column":0},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":0}},{"name":"sum","generated":{"line":32,"column":4},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":4}},{"generated":{"line":32,"column":10},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":10}},{"generated":{"line":32,"column":23},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":23}},{"name":"add","generated":{"line":32,"column":45},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":30}},{"generated":{"line":32,"column":58},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":23}},{"generated":{"line":32,"column":60},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":35}},{"generated":{"line":32,"column":61},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":23}},{"generated":{"line":32,"column":62},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":19,"column":0}},{"name":"sum","generated":{"line":33,"column":18},"source":"..\\node_modules\\ramda\\es\\sum.js","original":{"line":20,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\sum.js":"import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;"},"lineCount":null}},"hash":"ffb831fe5b5ba115a2d6694ce34e4ed6","cacheData":{"env":{}}}