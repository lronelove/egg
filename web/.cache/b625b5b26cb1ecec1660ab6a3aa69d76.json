{"id":"..\\node_modules\\ramda\\es\\ascend.js","dependencies":[{"name":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\work\\2018-9-29\\project\\package.json","includedInParent":true,"mtime":1538296431792},{"name":"./internal/_curry3","loc":{"line":1,"column":20},"parent":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\ascend.js","resolved":"E:\\work\\2018-9-29\\project\\node_modules\\ramda\\es\\internal\\_curry3.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry3');\n\nvar _curry2 = _interopRequireDefault(_curry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/(0, _curry2.default)(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexports.default = ascend;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":3,"column":0}},{"generated":{"line":35,"column":0},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":0}},{"name":"ascend","generated":{"line":35,"column":4},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":4}},{"generated":{"line":35,"column":13},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":13}},{"generated":{"line":35,"column":26},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":26}},{"generated":{"line":35,"column":47},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":34}},{"name":"ascend","generated":{"line":35,"column":56},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":43}},{"generated":{"line":35,"column":62},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":34}},{"name":"fn","generated":{"line":35,"column":63},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":50}},{"generated":{"line":35,"column":65},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":34}},{"name":"a","generated":{"line":35,"column":67},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":54}},{"generated":{"line":35,"column":68},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":34}},{"name":"b","generated":{"line":35,"column":70},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":57}},{"generated":{"line":35,"column":71},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":34}},{"generated":{"line":35,"column":73},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":60}},{"generated":{"line":36,"column":0},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":26,"column":2}},{"name":"aa","generated":{"line":36,"column":6},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":26,"column":6}},{"name":"fn","generated":{"line":36,"column":11},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":26,"column":11}},{"name":"a","generated":{"line":36,"column":14},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":26,"column":14}},{"generated":{"line":36,"column":15},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":26,"column":11}},{"generated":{"line":36,"column":16},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":26,"column":2}},{"generated":{"line":37,"column":0},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":27,"column":2}},{"name":"bb","generated":{"line":37,"column":6},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":27,"column":6}},{"name":"fn","generated":{"line":37,"column":11},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":27,"column":11}},{"name":"b","generated":{"line":37,"column":14},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":27,"column":14}},{"generated":{"line":37,"column":15},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":27,"column":11}},{"generated":{"line":37,"column":16},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":27,"column":2}},{"generated":{"line":38,"column":0},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":2}},{"name":"aa","generated":{"line":38,"column":9},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":9}},{"name":"bb","generated":{"line":38,"column":14},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":14}},{"generated":{"line":38,"column":16},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":9}},{"generated":{"line":38,"column":19},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":19}},{"generated":{"line":38,"column":20},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":20}},{"generated":{"line":38,"column":21},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":9}},{"name":"aa","generated":{"line":38,"column":24},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":24}},{"name":"bb","generated":{"line":38,"column":29},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":29}},{"generated":{"line":38,"column":31},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":24}},{"generated":{"line":38,"column":34},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":34}},{"generated":{"line":38,"column":35},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":24}},{"generated":{"line":38,"column":38},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":38}},{"generated":{"line":38,"column":39},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":28,"column":2}},{"generated":{"line":39,"column":0},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":29,"column":1}},{"generated":{"line":39,"column":1},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":26}},{"generated":{"line":39,"column":2},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":25,"column":0}},{"name":"ascend","generated":{"line":40,"column":18},"source":"..\\node_modules\\ramda\\es\\ascend.js","original":{"line":30,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\ascend.js":"import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;"},"lineCount":null}},"hash":"0eec9637dbd7ae45e5d34a77ba5976b9","cacheData":{"env":{}}}