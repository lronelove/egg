{"id":"..\\node_modules\\ramda\\es\\dropWhile.js","dependencies":[{"name":"E:\\git\\egg\\node_modules\\ramda\\package.json","includedInParent":true,"mtime":1507569560000},{"name":"E:\\git\\egg\\package.json","includedInParent":true,"mtime":1539154142757},{"name":"./internal/_curry2","loc":{"line":1,"column":20},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_curry2.js"},{"name":"./internal/_dispatchable","loc":{"line":2,"column":26},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_dispatchable.js"},{"name":"./internal/_xdropWhile","loc":{"line":3,"column":24},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\internal\\_xdropWhile.js"},{"name":"./slice","loc":{"line":4,"column":18},"parent":"E:\\git\\egg\\node_modules\\ramda\\es\\dropWhile.js","resolved":"E:\\git\\egg\\node_modules\\ramda\\es\\slice.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _curry = require('./internal/_curry2');\n\nvar _curry3 = _interopRequireDefault(_curry);\n\nvar _dispatchable2 = require('./internal/_dispatchable');\n\nvar _dispatchable3 = _interopRequireDefault(_dispatchable2);\n\nvar _xdropWhile2 = require('./internal/_xdropWhile');\n\nvar _xdropWhile3 = _interopRequireDefault(_xdropWhile2);\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/(0, _curry3.default)( /*#__PURE__*/(0, _dispatchable3.default)(['dropWhile'], _xdropWhile3.default, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return (0, _slice2.default)(idx, Infinity, xs);\n}));\nexports.default = dropWhile;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":4,"column":0}},{"generated":{"line":25,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":6,"column":0}},{"generated":{"line":53,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":0}},{"name":"dropWhile","generated":{"line":53,"column":4},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":4}},{"generated":{"line":53,"column":16},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":16}},{"generated":{"line":53,"column":29},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":29}},{"generated":{"line":53,"column":51},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":38}},{"generated":{"line":53,"column":64},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":51}},{"generated":{"line":53,"column":92},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":65}},{"generated":{"line":53,"column":93},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":66}},{"generated":{"line":53,"column":104},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":65}},{"generated":{"line":53,"column":105},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":51}},{"name":"_xdropWhile","generated":{"line":53,"column":107},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":80}},{"generated":{"line":53,"column":127},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":51}},{"generated":{"line":53,"column":129},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":93}},{"name":"dropWhile","generated":{"line":53,"column":138},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":102}},{"generated":{"line":53,"column":147},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":93}},{"name":"pred","generated":{"line":53,"column":148},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":112}},{"generated":{"line":53,"column":152},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":93}},{"name":"xs","generated":{"line":53,"column":154},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":118}},{"generated":{"line":53,"column":156},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":93}},{"generated":{"line":53,"column":158},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":122}},{"generated":{"line":54,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":35,"column":2}},{"name":"idx","generated":{"line":54,"column":6},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":35,"column":6}},{"generated":{"line":54,"column":12},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":35,"column":12}},{"generated":{"line":54,"column":13},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":35,"column":2}},{"generated":{"line":55,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":36,"column":2}},{"name":"len","generated":{"line":55,"column":6},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":36,"column":6}},{"name":"xs","generated":{"line":55,"column":12},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":36,"column":12}},{"name":"length","generated":{"line":55,"column":15},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":36,"column":15}},{"generated":{"line":55,"column":21},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":36,"column":2}},{"generated":{"line":56,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":2}},{"name":"idx","generated":{"line":56,"column":9},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":9}},{"name":"len","generated":{"line":56,"column":15},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":15}},{"generated":{"line":56,"column":18},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":9}},{"name":"pred","generated":{"line":56,"column":22},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":22}},{"name":"xs","generated":{"line":56,"column":27},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":27}},{"name":"idx","generated":{"line":56,"column":30},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":30}},{"generated":{"line":56,"column":33},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":27}},{"generated":{"line":56,"column":34},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":22}},{"generated":{"line":56,"column":35},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":2}},{"generated":{"line":56,"column":37},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":37,"column":37}},{"name":"idx","generated":{"line":57,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":38,"column":4}},{"generated":{"line":57,"column":11},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":38,"column":11}},{"generated":{"line":57,"column":12},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":38,"column":4}},{"generated":{"line":58,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":39,"column":3}},{"generated":{"line":59,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":2}},{"generated":{"line":59,"column":9},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":9}},{"name":"idx","generated":{"line":59,"column":30},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":15}},{"generated":{"line":59,"column":33},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":9}},{"name":"Infinity","generated":{"line":59,"column":35},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":20}},{"generated":{"line":59,"column":43},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":9}},{"name":"xs","generated":{"line":59,"column":45},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":30}},{"generated":{"line":59,"column":47},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":9}},{"generated":{"line":59,"column":48},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":40,"column":2}},{"generated":{"line":60,"column":0},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":41,"column":1}},{"generated":{"line":60,"column":1},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":51}},{"generated":{"line":60,"column":2},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":29}},{"generated":{"line":60,"column":3},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":34,"column":0}},{"name":"dropWhile","generated":{"line":61,"column":18},"source":"..\\node_modules\\ramda\\es\\dropWhile.js","original":{"line":42,"column":15}}],"sources":{"..\\node_modules\\ramda\\es\\dropWhile.js":"import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;"},"lineCount":null}},"hash":"90b96a254b44bb40444e49295e7f0abe","cacheData":{"env":{}}}